apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: robot-operator
    control-plane: controller-manager
  name: robot-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: buildmanagers.robot.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: robot.roboscale.io
  names:
    kind: BuildManager
    listKind: BuildManagerList
    plural: buildmanagers
    singular: buildmanager
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.steps[].name
          name: Steps
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BuildManager is the Schema for the buildmanagers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the BuildManager.
              properties:
                steps:
                  description: Defines the building steps.
                  items:
                    description: Step is a command or script to execute when building a robot. Either `command` or `script` should be specified for each step.
                    properties:
                      command:
                        description: Bash command to run. Assume that your command will be `/bin/bash -c <COMMAND>`. Use logical operators (eg. `&&`) and pipes if the multiple dependent commands will be executed.
                        type: string
                      env:
                        description: Environment variables for step.
                        items:
                          description: EnvVar represents an environment variable present in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes, optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                            - name
                          type: object
                        type: array
                      instances:
                        description: Cluster selector. If the current instance name is on the list, BuildManager creates building jobs.
                        items:
                          type: string
                        type: array
                      name:
                        description: Name of the step.
                        type: string
                      script:
                        description: Bash script to run.
                        type: string
                      workspace:
                        description: Name of the workspace. Should be selected among the existing workspaces in WorkspaceManager's manifests.
                        type: string
                    required:
                      - name
                      - workspace
                    type: object
                  type: array
              type: object
            status:
              description: Most recently observed status of the BuildManager.
              properties:
                active:
                  description: Indicates if the BuildManager is currently executing it's jobs.
                  type: boolean
                phase:
                  description: Phase of BuildManager.
                  type: string
                scriptConfigMapStatus:
                  description: Status of the ConfigMap that holds scripts. If a script is specified inside `.spec.steps[k]`, they are mounted to the step jobs via this ConfigMap.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                steps:
                  description: Statuses of the build steps.
                  items:
                    properties:
                      resource:
                        description: Generic status for any owned resource.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                          - created
                        type: object
                      step:
                        description: Status of the step.
                        properties:
                          command:
                            description: Bash command to run. Assume that your command will be `/bin/bash -c <COMMAND>`. Use logical operators (eg. `&&`) and pipes if the multiple dependent commands will be executed.
                            type: string
                          env:
                            description: Environment variables for step.
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                        - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                        - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                                - name
                              type: object
                            type: array
                          instances:
                            description: Cluster selector. If the current instance name is on the list, BuildManager creates building jobs.
                            items:
                              type: string
                            type: array
                          name:
                            description: Name of the step.
                            type: string
                          script:
                            description: Bash script to run.
                            type: string
                          workspace:
                            description: Name of the workspace. Should be selected among the existing workspaces in WorkspaceManager's manifests.
                            type: string
                        required:
                          - name
                          - workspace
                        type: object
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: discoveryservers.robot.roboscale.io
spec:
  group: robot.roboscale.io
  names:
    kind: DiscoveryServer
    listKind: DiscoveryServerList
    plural: discoveryservers
    singular: discoveryserver
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.type
          name: Type
          type: string
        - jsonPath: .spec.domainID
          name: Domain ID
          type: string
        - jsonPath: .spec.hostname
          name: Hostname
          type: string
        - jsonPath: .spec.subdomain
          name: Subdomain
          type: string
        - jsonPath: .status.connectionInfo.ip
          name: IP
          type: string
        - jsonPath: .status.connectionInfo.uri
          name: URI
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: DiscoveryServer is a custom resource that connects Robots and Fleets both locally and geoghraphically in DDS (UDP multicast) level.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the DiscoveryServer.
              properties:
                cluster:
                  description: Cloud instance name that holds DiscoveryServer instance with `Server` type. Should be empty if the type is `Server` since it takes cloud instance's name automatically. Should be set if the type is `Client`.
                  type: string
                domainID:
                  description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                  maximum: 101
                  minimum: 0
                  type: integer
                hostname:
                  description: If instance type is `Server`, it can be an arbitrary value. If instance type is `Client`, it should be the same with Server's hostname. Used for getting Server's IP over DNS.
                  type: string
                reference:
                  description: Reference to the `Server` instance. It is used if `.spec.type` is `Client`. Referenced object can be previously provisioned in another cluster. In that case, cluster's name can be specified in `.spec.cluster` field.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                subdomain:
                  description: If instance type is `Server`, it can be an arbitrary value. If instance type is `Client`, it should be the same with Server's subdomain. Used for getting Server's IP over DNS.
                  type: string
                type:
                  description: Instance type can be either `Server` or `Client`. If `Server`, instance creates discovery server resources and workloads. Other `Client` instances can connect to the `Server` instance. If `Client`, instance tries to connect a `Server` instance and hold `Server` configuration in a ConfigMap.
                  type: string
              required:
                - domainID
              type: object
            status:
              description: Most recently observed status of the DiscoveryServer.
              properties:
                configMapStatus:
                  description: Status of the DiscoveryServer config map.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                connectionInfo:
                  description: Connection information.
                  properties:
                    configMapName:
                      description: Name of the config map that holds discovery server configuration.
                      type: string
                    ip:
                      description: IP of the discovery server. IP is being obtained from the DNS name, which is being built according to the discovery server configuration.
                      type: string
                    uri:
                      description: URI of the discovery server. Discovery server instance tries to ping this address to see if it's reachable.
                      type: string
                  type: object
                phase:
                  description: Phase of the DiscoveryServer.
                  type: string
                podStatus:
                  description: Status of the DiscoveryServer pod.
                  properties:
                    ip:
                      description: IP of the pod.
                      type: string
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                  type: object
                serviceExportStatus:
                  description: Status of the DiscoveryServer ServiceExport.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                serviceStatus:
                  description: Status of the DiscoveryServer service.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: launchmanagers.robot.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: robot.roboscale.io
  names:
    kind: LaunchManager
    listKind: LaunchManagerList
    plural: launchmanagers
    singular: launchmanager
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.launches[].name
          name: Launches
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: LaunchManager is the Schema for the launchmanagers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the LaunchManager.
              properties:
                launches:
                  additionalProperties:
                    description: Launch description of a repository.
                    properties:
                      container:
                        description: General container configuration parameters.
                        properties:
                          display:
                            description: Launch processes connects an X11 socket if it's set to `true` and a target RobotVDI resource is set in labels with key `robolaunch.io/target-vdi`. Applications that requires GUI can be executed such as rViz.
                            type: boolean
                          env:
                            description: Additional environment variables to set when launching ROS nodes.
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                        - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                        - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                                - name
                              type: object
                            type: array
                          privileged:
                            description: Launch container privilege.
                            type: boolean
                          resources:
                            description: Launch container resource limits.
                            properties:
                              cpu:
                                description: CPU resource limit.
                                pattern: ^([0-9])+(m)$
                                type: string
                              gpuCore:
                                description: GPU core number that will be allocated.
                                type: integer
                              gpuInstance:
                                default: nvidia.com/gpu
                                description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb. Defaults to "nvidia.com/gpu".
                                type: string
                              memory:
                                description: Memory resource limit.
                                pattern: ^([0-9])+(Mi|Gi)$
                                type: string
                            type: object
                        type: object
                      entrypoint:
                        description: Entrypoint configuration of launch.
                        properties:
                          cmd:
                            description: Custom command to launch packages or start nodes. Required if the launch type is `Custom`.
                            type: string
                          disableSourcingWs:
                            description: If `true`, workspaces are not sourced by default. Used if the launch type is `Custom`.
                            type: boolean
                          executable:
                            description: Executable file name. (eg. `webcam_pub.py`) Required and used if the launch type is `Run`.
                            type: string
                          launchfile:
                            description: Launchfile. (eg. `nav_launch.py`) Required and used if the launch type is `Launch`.
                            type: string
                          package:
                            description: Package name. (eg. `robolaunch_cloudy_navigation`)
                            type: string
                          parameters:
                            additionalProperties:
                              type: string
                            description: Launch parameters.
                            type: object
                          type:
                            description: Launching type. Can be `Launch`, `Run` or `Custom`.
                            enum:
                              - Launch
                              - Run
                              - Custom
                            type: string
                        required:
                          - cmd
                          - disableSourcingWs
                          - executable
                          - launchfile
                          - package
                        type: object
                      instances:
                        description: Cluster selector. If the current instance name is on the list, LaunchManager creates launch pods.
                        items:
                          type: string
                        type: array
                      namespacing:
                        description: ROS 2 namespacing. May not be suitable for all launchfiles. If used, all the node names and topic names should be defined relative, not absolute. (eg. `cmd_vel` instead of /cmd_vel``)
                        type: boolean
                      workspace:
                        description: Name of the workspace. Should be selected among the existing workspaces in WorkspaceManager's manifests.
                        type: string
                    required:
                      - workspace
                    type: object
                  description: Launch descriptions. Every object defined here generates a launching command in the specified workspace.
                  type: object
              type: object
            status:
              description: Most recently observed status of the LaunchManager.
              properties:
                active:
                  description: Indicates if the LaunchManager is attached to a Robot and actively running.
                  type: boolean
                launchPodStatus:
                  description: Collective statuses of launch pod and launch objects.
                  properties:
                    launchStatus:
                      additionalProperties:
                        properties:
                          active:
                            description: Inditaces if the launch process are actively running on cluster. It may not be selected by launch cluster selectors.
                            type: boolean
                          containerStatus:
                            description: Statuses of the containers of pods owned by LaunchManager.
                            properties:
                              containerID:
                                description: Container's ID in the format '<type>://<container_id>'.
                                type: string
                              image:
                                description: 'The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images.'
                                type: string
                              imageID:
                                description: ImageID of the container's image.
                                type: string
                              lastState:
                                description: Details about the container's last termination condition.
                                properties:
                                  running:
                                    description: Details about a running container
                                    properties:
                                      startedAt:
                                        description: Time at which the container was last (re-)started
                                        format: date-time
                                        type: string
                                    type: object
                                  terminated:
                                    description: Details about a terminated container
                                    properties:
                                      containerID:
                                        description: Container's ID in the format '<type>://<container_id>'
                                        type: string
                                      exitCode:
                                        description: Exit status from the last termination of the container
                                        format: int32
                                        type: integer
                                      finishedAt:
                                        description: Time at which the container last terminated
                                        format: date-time
                                        type: string
                                      message:
                                        description: Message regarding the last termination of the container
                                        type: string
                                      reason:
                                        description: (brief) reason from the last termination of the container
                                        type: string
                                      signal:
                                        description: Signal from the last termination of the container
                                        format: int32
                                        type: integer
                                      startedAt:
                                        description: Time at which previous execution of the container started
                                        format: date-time
                                        type: string
                                    required:
                                      - exitCode
                                    type: object
                                  waiting:
                                    description: Details about a waiting container
                                    properties:
                                      message:
                                        description: Message regarding why the container is not yet running.
                                        type: string
                                      reason:
                                        description: (brief) reason the container is not yet running.
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
                                type: string
                              ready:
                                description: Specifies whether the container has passed its readiness probe.
                                type: boolean
                              restartCount:
                                description: The number of times the container has been restarted.
                                format: int32
                                type: integer
                              started:
                                description: Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.
                                type: boolean
                              state:
                                description: Details about the container's current condition.
                                properties:
                                  running:
                                    description: Details about a running container
                                    properties:
                                      startedAt:
                                        description: Time at which the container was last (re-)started
                                        format: date-time
                                        type: string
                                    type: object
                                  terminated:
                                    description: Details about a terminated container
                                    properties:
                                      containerID:
                                        description: Container's ID in the format '<type>://<container_id>'
                                        type: string
                                      exitCode:
                                        description: Exit status from the last termination of the container
                                        format: int32
                                        type: integer
                                      finishedAt:
                                        description: Time at which the container last terminated
                                        format: date-time
                                        type: string
                                      message:
                                        description: Message regarding the last termination of the container
                                        type: string
                                      reason:
                                        description: (brief) reason from the last termination of the container
                                        type: string
                                      signal:
                                        description: Signal from the last termination of the container
                                        format: int32
                                        type: integer
                                      startedAt:
                                        description: Time at which previous execution of the container started
                                        format: date-time
                                        type: string
                                    required:
                                      - exitCode
                                    type: object
                                  waiting:
                                    description: Details about a waiting container
                                    properties:
                                      message:
                                        description: Message regarding why the container is not yet running.
                                        type: string
                                      reason:
                                        description: (brief) reason the container is not yet running.
                                        type: string
                                    type: object
                                type: object
                            required:
                              - image
                              - imageID
                              - name
                              - ready
                              - restartCount
                            type: object
                        type: object
                      description: Status of launch objects. Every launch object generates a `ros2 launch` command that will run as an entrypoint in a container.
                      type: object
                    status:
                      description: Launch pod status. Every LaunchManager creates one pod if active.
                      properties:
                        ip:
                          description: IP of the pod.
                          type: string
                        resource:
                          description: Generic status for any owned resource.
                          properties:
                            created:
                              description: Shows if the owned resource is created.
                              type: boolean
                            phase:
                              description: Phase of the owned resource.
                              type: string
                            reference:
                              description: Reference to the owned resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - created
                          type: object
                      type: object
                  type: object
                phase:
                  description: Phase of LaunchManager.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: metricscollectors.robot.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: robot.roboscale.io
  names:
    kind: MetricsCollector
    listKind: MetricsCollectorList
    plural: metricscollectors
    singular: metricscollector
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MetricsCollector is the Schema for the metricscollectors API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MetricsCollectorSpec defines the desired state of MetricsCollector
              properties:
                cpu:
                  type: boolean
                gpu:
                  type: boolean
                memory:
                  type: boolean
                networkLoad:
                  type: boolean
                waitSeconds:
                  default: 10
                  description: 'TODO: Add default value'
                  format: int64
                  type: integer
              required:
                - cpu
                - gpu
                - memory
                - networkLoad
                - waitSeconds
              type: object
            status:
              description: MetricsCollectorStatus defines the observed state of MetricsCollector
              properties:
                allocatable:
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: ResourceList is a set of (resource name, quantity) pairs.
                  type: object
                componentMetrics:
                  items:
                    properties:
                      containerName:
                        type: string
                      cpuUtilization:
                        properties:
                          corePercentage:
                            type: string
                          hostPercentage:
                            type: string
                          message:
                            type: string
                          value:
                            type: string
                        type: object
                      memoryUtilization:
                        properties:
                          hostPercentage:
                            type: string
                          message:
                            type: string
                          value:
                            type: string
                        type: object
                      message:
                        type: string
                      networkLoadUtilization:
                        properties:
                          interfaces:
                            items:
                              properties:
                                name:
                                  type: string
                                receive:
                                  properties:
                                    load:
                                      type: string
                                    loadKBit:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                transmit:
                                  properties:
                                    load:
                                      type: string
                                    loadKBit:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          message:
                            type: string
                        type: object
                      ownerReference:
                        description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          blockOwnerDeletion:
                            description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
                            type: boolean
                          controller:
                            description: If true, this reference points to the managing controller.
                            type: boolean
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                            type: string
                        required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                        type: object
                        x-kubernetes-map-type: atomic
                      podReference:
                        description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  type: array
                lastUpdateTimestamp:
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: metricsexporters.robot.roboscale.io
spec:
  group: robot.roboscale.io
  names:
    kind: MetricsExporter
    listKind: MetricsExporterList
    plural: metricsexporters
    singular: metricsexporter
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MetricsExporter collects metrics from host machine and expose them from the Kubernetes API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the MetricsExporter.
              properties:
                gpu:
                  description: Configurational parameters about GPU metrics collection.
                  properties:
                    interval:
                      description: Watching latency.
                      type: integer
                    track:
                      description: MetricsExporter watches volatile GPU usage in the host machine if it's set to `true`.
                      type: boolean
                  type: object
                network:
                  description: Configurational parameters about network metrics collection.
                  properties:
                    interfaces:
                      description: Network interfaces which are desired to being watched.
                      items:
                        type: string
                      type: array
                    interval:
                      description: Watching latency.
                      type: integer
                    track:
                      description: MetricsExporter watches network loads in the host machine if it's set to `true`.
                      type: boolean
                  type: object
                storage:
                  description: Configurational parameters about storage metrics collection.
                  properties:
                    interval:
                      description: Watching latency.
                      type: integer
                    track:
                      description: MetricsExporter watches storage usage in the host machine if it's set to `true`.
                      type: boolean
                  type: object
              type: object
            status:
              description: Most recently observed status of the MetricsExporter.
              properties:
                phase:
                  description: Phase of MetricsExporter.
                  type: string
                podStatus:
                  description: Status of MetricsExporter pod.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                roleBindingStatus:
                  description: Status of role binding created for main and sidecar applications.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                roleStatus:
                  description: Status of role created for main and sidecar applications.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                saStatus:
                  description: Status of service account created for main and sidecar applications.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                usage:
                  description: Usage metrics.
                  properties:
                    gpuDeviceStatuses:
                      description: GPU device information.
                      properties:
                        dcgmEndpoint:
                          description: DCGM endpoint.
                          type: string
                        devices:
                          additionalProperties:
                            properties:
                              device:
                                description: GPU device name.
                                type: string
                              model:
                                description: GPU device model.
                                type: string
                              uuid:
                                description: GPU device UUID.
                                type: string
                            type: object
                          description: Available GPU devices.
                          type: object
                        metrics:
                          description: GPU device metrics from DCGM exporter.
                          properties:
                            fbMemoryFree:
                              additionalProperties:
                                type: string
                              description: Framebuffer memory free (in MiB).
                              type: object
                            fbMemoryUsed:
                              additionalProperties:
                                type: string
                              description: Framebuffer memory used (in MiB).
                              type: object
                            gpuUtil:
                              additionalProperties:
                                type: string
                              description: GPU utilization (in %).
                              type: object
                            memoryUtil:
                              additionalProperties:
                                type: string
                              description: Memory utilization (in %).
                              type: object
                            powerUsage:
                              additionalProperties:
                                type: string
                              description: Power draw (in W).
                              type: object
                            temp:
                              additionalProperties:
                                type: string
                              description: GPU temperature (in C).
                              type: object
                          type: object
                      type: object
                    gpuInstanceUsage:
                      additionalProperties:
                        description: Current usage of GPU cores belongs to a GPU instance (eg. mig-1g.10gb).
                        properties:
                          allocated:
                            default: "0"
                            description: Number of allocated virtual cores.
                            type: string
                          capacity:
                            description: Number of total virtual cores.
                            type: string
                        type: object
                      description: GPU virtual cores.
                      type: object
                    network:
                      description: Network usage information.
                      properties:
                        lastUpdateTimestamp:
                          description: Last update time.
                          type: string
                        load:
                          additionalProperties:
                            properties:
                              in:
                                description: Average load of incoming packets.
                                type: string
                              out:
                                description: Average load of outgoing packets.
                                type: string
                            type: object
                          description: Loads values of network interfaces.
                          type: object
                      type: object
                    storage:
                      description: Storage usage information
                      properties:
                        lastUpdateTimestamp:
                          description: Last update time.
                          type: string
                        usage:
                          additionalProperties:
                            properties:
                              mountedOn:
                                description: Directory that the filesystem mounted on.
                                type: string
                              percentage:
                                description: Usage percentage of a filesystem.
                                type: string
                              size:
                                description: Size of the filesystem.
                                type: string
                              used:
                                description: Size of the used parts of a filesystem.
                                type: string
                            type: object
                          description: Usage values of filesystems.
                          type: object
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  name: relayservers.robot.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: robot.roboscale.io
  names:
    kind: RelayServer
    listKind: RelayServerList
    plural: relayservers
    singular: relayserver
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.instanceName
          name: Instance
          type: string
        - jsonPath: .spec.remoteNamespace
          name: Remote Namespace
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RelayServer is the Schema for the relayservers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RelayServerSpec defines the desired state of RelayServer.
              properties:
                hostname:
                  description: Hostname of the remote pod.
                  type: string
                instanceName:
                  description: Remote instance name.
                  type: string
                remoteNamespace:
                  description: Remote namespace.
                  type: string
                remotePort:
                  description: Remote port.
                  type: integer
                rootDNSConfig:
                  description: '[*alpha*] Root DNS configuration.'
                  properties:
                    host:
                      description: '[*alpha*] Root DNS name..'
                      type: string
                  required:
                    - host
                  type: object
                subdomain:
                  description: Subdomain of the remote pod. It's also same with remote service's name.
                  type: string
                tlsSecretRef:
                  description: '[*alpha*] TLS secret reference.'
                  properties:
                    name:
                      description: '[*alpha*] TLS secret object name.'
                      type: string
                    namespace:
                      description: '[*alpha*] TLS secret object namespace.'
                      type: string
                  required:
                    - name
                    - namespace
                  type: object
              type: object
            status:
              description: RelayServerStatus defines the observed state of RelayServer.
              properties:
                ingressStatus:
                  description: Status of RelayServer Ingress.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                phase:
                  description: Phase of RelayServer.
                  type: string
                podStatus:
                  description: Status of RelayServer pod.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                serviceStatus:
                  description: Status of RelayServer service.
                  properties:
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    urls:
                      additionalProperties:
                        type: string
                      description: Connection URL.
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: robotartifacts.robot.roboscale.io
spec:
  group: robot.roboscale.io
  names:
    kind: RobotArtifact
    listKind: RobotArtifactList
    plural: robotartifacts
    singular: robotartifact
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RobotArtifact is a non-functional resource that holds Robot's specifications. It is used to define Robot templates.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            template:
              description: Holds Robot's `.spec`.
              properties:
                additionalConfigs:
                  additionalProperties:
                    properties:
                      configType:
                        default: Operator
                        description: Config type is by default `Operator`. Other options are `Env` and `File`.
                        type: string
                      value:
                        description: Value of the corresponding config key.
                        type: string
                    type: object
                  description: Key value pairs that operator uses to extend configuration.
                  type: object
                environment:
                  description: Holds environment's configuration. Applied if `.spec.type` is `Environment` and must be `nil` otherwise.
                  properties:
                    application:
                      description: Application properties.
                      properties:
                        name:
                          description: Application name.
                          type: string
                        version:
                          description: Version of the application.
                          type: string
                      required:
                        - name
                        - version
                      type: object
                    devspace:
                      description: DevSpace image properties.
                      properties:
                        desktop:
                          description: Ubuntu desktop.
                          type: string
                        ubuntuDistro:
                          description: Ubuntu distribution of the environment.
                          type: string
                        version:
                          description: DevSpace image version.
                          type: string
                      required:
                        - desktop
                        - ubuntuDistro
                        - version
                      type: object
                    domain:
                      description: Domain of the environment.
                      type: string
                  required:
                    - application
                    - devspace
                    - domain
                  type: object
                robot:
                  description: Holds robot's configuration. Applied if `.spec.type` is `Robot` and must be `nil` otherwise.
                  properties:
                    discoveryServerTemplate:
                      description: Discovery server configurational parameters.
                      properties:
                        cluster:
                          description: Cloud instance name that holds DiscoveryServer instance with `Server` type. Should be empty if the type is `Server` since it takes cloud instance's name automatically. Should be set if the type is `Client`.
                          type: string
                        domainID:
                          description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                          maximum: 101
                          minimum: 0
                          type: integer
                        hostname:
                          description: If instance type is `Server`, it can be an arbitrary value. If instance type is `Client`, it should be the same with Server's hostname. Used for getting Server's IP over DNS.
                          type: string
                        reference:
                          description: Reference to the `Server` instance. It is used if `.spec.type` is `Client`. Referenced object can be previously provisioned in another cluster. In that case, cluster's name can be specified in `.spec.cluster` field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        subdomain:
                          description: If instance type is `Server`, it can be an arbitrary value. If instance type is `Client`, it should be the same with Server's subdomain. Used for getting Server's IP over DNS.
                          type: string
                        type:
                          description: Instance type can be either `Server` or `Client`. If `Server`, instance creates discovery server resources and workloads. Other `Client` instances can connect to the `Server` instance. If `Client`, instance tries to connect a `Server` instance and hold `Server` configuration in a ConfigMap.
                          type: string
                      required:
                        - domainID
                      type: object
                    distributions:
                      description: ROS 2 distributions to be used. You can select multiple distributions if they are supported in the same underlying OS. (eg. `foxy` and `galactic` are supported in Ubuntu Focal, so they can be used together but both cannot be used with `humble`)
                      items:
                        description: ROS 2 distribution selection. Currently supported distributions are Humble, Foxy, Galactic.
                        enum:
                          - foxy
                          - galactic
                          - humble
                        type: string
                      maxItems: 2
                      minItems: 1
                      type: array
                    domainID:
                      description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                      maximum: 101
                      minimum: 0
                      type: integer
                    rmwImplementation:
                      description: RMW implementation selection. Robot operator currently supports only FastRTPS. See https://docs.ros.org/en/foxy/How-To-Guides/Working-with-multiple-RMW-implementations.html.
                      enum:
                        - rmw_fastrtps_cpp
                      type: string
                    rosBridgeTemplate:
                      description: ROS bridge configurational parameters.
                      properties:
                        ingress:
                          description: '[*alpha*] ROSBridge will create an Ingress resource if `true`.'
                          type: boolean
                        ros:
                          description: Configurational parameters for ROS bridge.
                          properties:
                            distro:
                              description: ROS distribution for bridge.
                              enum:
                                - foxy
                                - galactic
                                - humble
                              type: string
                            enabled:
                              description: If `true`, resources and workloads are created by ROSBridge.
                              type: boolean
                          type: object
                        ros2:
                          description: Configurational parameters for ROS 2 bridge.
                          properties:
                            distro:
                              description: ROS distribution for bridge.
                              enum:
                                - foxy
                                - galactic
                                - humble
                              type: string
                            enabled:
                              description: If `true`, resources and workloads are created by ROSBridge.
                              type: boolean
                          type: object
                        serviceType:
                          description: Service type of ROSBridge. `ClusterIP` and `NodePort` is supported.
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                      type: object
                  required:
                    - domainID
                  type: object
                robotDevSuiteTemplate:
                  description: Robot development suite template
                  properties:
                    ideEnabled:
                      description: If `true`, a Cloud IDE will be provisioned inside development suite.
                      type: boolean
                    remoteIDEEnabled:
                      description: If `true`, a relay server for remote Cloud IDE will be provisioned inside development suite.
                      type: boolean
                    remoteIDERelayServerTemplate:
                      description: Configurational parameters of remote IDE. Applied if `.spec.remoteIDEEnabled` is set to `true`.
                      properties:
                        hostname:
                          description: Hostname of the remote pod.
                          type: string
                        instanceName:
                          description: Remote instance name.
                          type: string
                        remoteNamespace:
                          description: Remote namespace.
                          type: string
                        remotePort:
                          description: Remote port.
                          type: integer
                        rootDNSConfig:
                          description: '[*alpha*] Root DNS configuration.'
                          properties:
                            host:
                              description: '[*alpha*] Root DNS name..'
                              type: string
                          required:
                            - host
                          type: object
                        subdomain:
                          description: Subdomain of the remote pod. It's also same with remote service's name.
                          type: string
                        tlsSecretRef:
                          description: '[*alpha*] TLS secret reference.'
                          properties:
                            name:
                              description: '[*alpha*] TLS secret object name.'
                              type: string
                            namespace:
                              description: '[*alpha*] TLS secret object namespace.'
                              type: string
                          required:
                            - name
                            - namespace
                          type: object
                      type: object
                    robotIDETemplate:
                      description: Configurational parameters of RobotIDE. Applied if `.spec.ideEnabled` is set to `true`.
                      properties:
                        display:
                          description: Cloud IDE connects an X11 socket if it's set to `true` and a target RobotVDI resource is set in labels with key `robolaunch.io/target-vdi`. Applications that requires GUI can be executed such as rViz.
                          type: boolean
                        ingress:
                          description: '[*alpha*] RobotIDE will create an Ingress resource if `true`.'
                          type: boolean
                        privileged:
                          description: If `true`, containers of RobotIDE will be privileged containers. It can be used in physical instances where it's necessary to access I/O devices on the host machine. Not recommended to activate this field on cloud instances.
                          type: boolean
                        resources:
                          description: Resource limitations of Cloud IDE.
                          properties:
                            cpu:
                              description: CPU resource limit.
                              pattern: ^([0-9])+(m)$
                              type: string
                            gpuCore:
                              description: GPU core number that will be allocated.
                              type: integer
                            gpuInstance:
                              default: nvidia.com/gpu
                              description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb. Defaults to "nvidia.com/gpu".
                              type: string
                            memory:
                              description: Memory resource limit.
                              pattern: ^([0-9])+(Mi|Gi)$
                              type: string
                          type: object
                        serviceType:
                          default: NodePort
                          description: Service type of Cloud IDE. `ClusterIP` and `NodePort` is supported.
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                      type: object
                    robotVDITemplate:
                      description: Configurational parameters of RobotVDI. Applied if `.spec.vdiEnabled` is set to `true`.
                      properties:
                        disableNvenc:
                          description: If true, VDI uses plain h264 instead of nvh264enc.
                          type: boolean
                        ingress:
                          description: '[*alpha*] RobotIDE will create an Ingress resource if `true`.'
                          type: boolean
                        nat1to1:
                          description: NAT1TO1 option for Cloud VDI.
                          type: string
                        privileged:
                          description: If `true`, containers of RobotIDE will be privileged containers. It can be used in physical instances where it's necessary to access I/O devices on the host machine. Not recommended to activate this field on cloud instances.
                          type: boolean
                        resolution:
                          default: 2048x1152
                          description: VDI screen resolution options. Default is `2048x1152`.
                          enum:
                            - 2048x1152
                            - 1920x1080
                            - 1600x1200
                          type: string
                        resources:
                          description: Resource limitations of Cloud IDE.
                          properties:
                            cpu:
                              description: CPU resource limit.
                              pattern: ^([0-9])+(m)$
                              type: string
                            gpuCore:
                              description: GPU core number that will be allocated.
                              type: integer
                            gpuInstance:
                              default: nvidia.com/gpu
                              description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb. Defaults to "nvidia.com/gpu".
                              type: string
                            memory:
                              description: Memory resource limit.
                              pattern: ^([0-9])+(Mi|Gi)$
                              type: string
                          type: object
                        serviceType:
                          default: NodePort
                          description: Service type of Cloud IDE. `ClusterIP` and `NodePort` is supported.
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                        webrtcPortRange:
                          description: UDP port range to used in WebRTC connections.
                          pattern: ^([0-9])+-([0-9])+$
                          type: string
                      type: object
                    vdiEnabled:
                      description: If `true`, a Cloud VDI will be provisioned inside development suite.
                      type: boolean
                  type: object
                rootDNSConfig:
                  description: '[*alpha*] Root DNS configuration.'
                  properties:
                    host:
                      description: '[*alpha*] Root DNS name..'
                      type: string
                  required:
                    - host
                  type: object
                storage:
                  description: Total storage amount to persist via Robot. Unit of measurement is MB. (eg. `10240` corresponds 10 GB) This amount is being shared between different components.
                  properties:
                    amount:
                      default: 10000
                      description: Specifies how much storage will be allocated in total. Use MB as a unit of measurement. (eg. `10240` is equal to 10 GB)
                      type: integer
                    storageClassConfig:
                      description: Storage class selection for robot's volumes.
                      properties:
                        accessMode:
                          description: PVC access modes. Currently, only `ReadWriteOnce` is supported.
                          type: string
                        name:
                          description: Storage class name.
                          type: string
                      type: object
                  type: object
                tlsSecretRef:
                  description: '[*alpha*] TLS secret reference.'
                  properties:
                    name:
                      description: '[*alpha*] TLS secret object name.'
                      type: string
                    namespace:
                      description: '[*alpha*] TLS secret object namespace.'
                      type: string
                  required:
                    - name
                    - namespace
                  type: object
                type:
                  description: Determines the object type. If "Environment", operator will provision an environment according to the specifications. (`.spec.environment`) If "Robot", operator will provision an environment specialized for ROS 2 according to the specifications. (`.spec.robot`)
                  type: string
                workspaceManagerTemplate:
                  description: Workspace manager template to configure ROS 2 workspaces.
                  properties:
                    updateNeeded:
                      description: WorkspaceManager is triggered if this field is set to `true`. Then the workspaces are being configured again while backing up the old configurations. This field is often used by operator.
                      type: boolean
                    workspaces:
                      description: Workspace definitions of robot. Multiple ROS 2 workspaces can be configured over this field.
                      items:
                        description: Workspace description. Each robot should contain at least one workspace. A workspace should contain at least one repository in it.
                        properties:
                          distro:
                            description: ROS 2 distribution selection. Currently supported distributions are Humble, Foxy, Galactic.
                            enum:
                              - foxy
                              - galactic
                              - humble
                            type: string
                          name:
                            description: Name of workspace. If a workspace's name is `my_ws`, it's absolute path is `/home/workspaces/my_ws`.
                            type: string
                          repositories:
                            additionalProperties:
                              description: Repository description.
                              properties:
                                branch:
                                  description: Branch of the repository to clone.
                                  type: string
                                hash:
                                  description: '[*Autofilled*] Hash of last commit'
                                  type: string
                                owner:
                                  description: '[*Autofilled*] User or organization, maintainer of repository'
                                  type: string
                                path:
                                  description: '[*Autofilled*] Absolute path of repository'
                                  type: string
                                repo:
                                  description: '[*Autofilled*] Repository name'
                                  type: string
                                url:
                                  description: Base URL of the repository.
                                  type: string
                              required:
                                - branch
                                - url
                              type: object
                            description: Repositories to clone inside workspace's `src` directory.
                            type: object
                        required:
                          - distro
                          - name
                          - repositories
                        type: object
                      minItems: 1
                      type: array
                    workspacesPath:
                      description: Global path of workspaces. It's fixed to `/root/workspaces` path.
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: robotdevsuites.robot.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: robot.roboscale.io
  names:
    kind: RobotDevSuite
    listKind: RobotDevSuiteList
    plural: robotdevsuites
    singular: robotdevsuite
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.vdiEnabled
          name: VDI
          type: string
        - jsonPath: .spec.ideEnabled
          name: IDE
          type: string
        - jsonPath: .spec.remoteIDEEnabled
          name: Remote IDE RS
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RobotDevSuite is a custom resource that creates dynamically configured development environments for robots.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the RobotDevSuite.
              properties:
                ideEnabled:
                  description: If `true`, a Cloud IDE will be provisioned inside development suite.
                  type: boolean
                remoteIDEEnabled:
                  description: If `true`, a relay server for remote Cloud IDE will be provisioned inside development suite.
                  type: boolean
                remoteIDERelayServerTemplate:
                  description: Configurational parameters of remote IDE. Applied if `.spec.remoteIDEEnabled` is set to `true`.
                  properties:
                    hostname:
                      description: Hostname of the remote pod.
                      type: string
                    instanceName:
                      description: Remote instance name.
                      type: string
                    remoteNamespace:
                      description: Remote namespace.
                      type: string
                    remotePort:
                      description: Remote port.
                      type: integer
                    rootDNSConfig:
                      description: '[*alpha*] Root DNS configuration.'
                      properties:
                        host:
                          description: '[*alpha*] Root DNS name..'
                          type: string
                      required:
                        - host
                      type: object
                    subdomain:
                      description: Subdomain of the remote pod. It's also same with remote service's name.
                      type: string
                    tlsSecretRef:
                      description: '[*alpha*] TLS secret reference.'
                      properties:
                        name:
                          description: '[*alpha*] TLS secret object name.'
                          type: string
                        namespace:
                          description: '[*alpha*] TLS secret object namespace.'
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                  type: object
                robotIDETemplate:
                  description: Configurational parameters of RobotIDE. Applied if `.spec.ideEnabled` is set to `true`.
                  properties:
                    display:
                      description: Cloud IDE connects an X11 socket if it's set to `true` and a target RobotVDI resource is set in labels with key `robolaunch.io/target-vdi`. Applications that requires GUI can be executed such as rViz.
                      type: boolean
                    ingress:
                      description: '[*alpha*] RobotIDE will create an Ingress resource if `true`.'
                      type: boolean
                    privileged:
                      description: If `true`, containers of RobotIDE will be privileged containers. It can be used in physical instances where it's necessary to access I/O devices on the host machine. Not recommended to activate this field on cloud instances.
                      type: boolean
                    resources:
                      description: Resource limitations of Cloud IDE.
                      properties:
                        cpu:
                          description: CPU resource limit.
                          pattern: ^([0-9])+(m)$
                          type: string
                        gpuCore:
                          description: GPU core number that will be allocated.
                          type: integer
                        gpuInstance:
                          default: nvidia.com/gpu
                          description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb. Defaults to "nvidia.com/gpu".
                          type: string
                        memory:
                          description: Memory resource limit.
                          pattern: ^([0-9])+(Mi|Gi)$
                          type: string
                      type: object
                    serviceType:
                      default: NodePort
                      description: Service type of Cloud IDE. `ClusterIP` and `NodePort` is supported.
                      enum:
                        - ClusterIP
                        - NodePort
                      type: string
                  type: object
                robotVDITemplate:
                  description: Configurational parameters of RobotVDI. Applied if `.spec.vdiEnabled` is set to `true`.
                  properties:
                    disableNvenc:
                      description: If true, VDI uses plain h264 instead of nvh264enc.
                      type: boolean
                    ingress:
                      description: '[*alpha*] RobotIDE will create an Ingress resource if `true`.'
                      type: boolean
                    nat1to1:
                      description: NAT1TO1 option for Cloud VDI.
                      type: string
                    privileged:
                      description: If `true`, containers of RobotIDE will be privileged containers. It can be used in physical instances where it's necessary to access I/O devices on the host machine. Not recommended to activate this field on cloud instances.
                      type: boolean
                    resolution:
                      default: 2048x1152
                      description: VDI screen resolution options. Default is `2048x1152`.
                      enum:
                        - 2048x1152
                        - 1920x1080
                        - 1600x1200
                      type: string
                    resources:
                      description: Resource limitations of Cloud IDE.
                      properties:
                        cpu:
                          description: CPU resource limit.
                          pattern: ^([0-9])+(m)$
                          type: string
                        gpuCore:
                          description: GPU core number that will be allocated.
                          type: integer
                        gpuInstance:
                          default: nvidia.com/gpu
                          description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb. Defaults to "nvidia.com/gpu".
                          type: string
                        memory:
                          description: Memory resource limit.
                          pattern: ^([0-9])+(Mi|Gi)$
                          type: string
                      type: object
                    serviceType:
                      default: NodePort
                      description: Service type of Cloud IDE. `ClusterIP` and `NodePort` is supported.
                      enum:
                        - ClusterIP
                        - NodePort
                      type: string
                    webrtcPortRange:
                      description: UDP port range to used in WebRTC connections.
                      pattern: ^([0-9])+-([0-9])+$
                      type: string
                  type: object
                vdiEnabled:
                  description: If `true`, a Cloud VDI will be provisioned inside development suite.
                  type: boolean
              type: object
            status:
              description: Most recently observed status of the RobotDevSuite.
              properties:
                active:
                  description: '[*alpha*] Indicates if RobotDevSuite is attached to a Robot and actively provisioned it''s resources.'
                  type: boolean
                phase:
                  description: Phase of RobotDevSuite.
                  type: string
                remoteIDERelayServerStatus:
                  description: Status of remote Cloud IDE RelayServer. Created only if the instance type is Physical Instance.
                  properties:
                    connections:
                      additionalProperties:
                        type: string
                      description: Address of the robot service that can be reached from outside.
                      type: object
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                  type: object
                robotIDEStatus:
                  description: Status of RobotIDE.
                  properties:
                    connections:
                      additionalProperties:
                        type: string
                      description: Address of the robot service that can be reached from outside.
                      type: object
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                  type: object
                robotVDIStatus:
                  description: Status of RobotVDI.
                  properties:
                    connections:
                      additionalProperties:
                        type: string
                      description: Address of the robot service that can be reached from outside.
                      type: object
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: robotides.robot.roboscale.io
spec:
  group: robot.roboscale.io
  names:
    kind: RobotIDE
    listKind: RobotIDEList
    plural: robotides
    singular: robotide
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.display
          name: Display
          type: string
        - jsonPath: .spec.privileged
          name: Privileged
          type: string
        - jsonPath: .spec.resources.gpuCore
          name: GPU
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RobotIDE creates and manages Cloud IDE resources and workloads.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the RobotIDE.
              properties:
                display:
                  description: Cloud IDE connects an X11 socket if it's set to `true` and a target RobotVDI resource is set in labels with key `robolaunch.io/target-vdi`. Applications that requires GUI can be executed such as rViz.
                  type: boolean
                ingress:
                  description: '[*alpha*] RobotIDE will create an Ingress resource if `true`.'
                  type: boolean
                privileged:
                  description: If `true`, containers of RobotIDE will be privileged containers. It can be used in physical instances where it's necessary to access I/O devices on the host machine. Not recommended to activate this field on cloud instances.
                  type: boolean
                resources:
                  description: Resource limitations of Cloud IDE.
                  properties:
                    cpu:
                      description: CPU resource limit.
                      pattern: ^([0-9])+(m)$
                      type: string
                    gpuCore:
                      description: GPU core number that will be allocated.
                      type: integer
                    gpuInstance:
                      default: nvidia.com/gpu
                      description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb. Defaults to "nvidia.com/gpu".
                      type: string
                    memory:
                      description: Memory resource limit.
                      pattern: ^([0-9])+(Mi|Gi)$
                      type: string
                  type: object
                serviceType:
                  default: NodePort
                  description: Service type of Cloud IDE. `ClusterIP` and `NodePort` is supported.
                  enum:
                    - ClusterIP
                    - NodePort
                  type: string
              type: object
            status:
              description: Most recently observed status of the RobotIDE.
              properties:
                configMapStatus:
                  description: Config map status. It's used to add background apps.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                customPortIngressStatus:
                  description: Status of Cloud IDE ingress for custom ports service. Created only if the robot has an additional config with key `IDE_CUSTOM_PORT_RANGE` and `.spec.ingress` is `true`.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                customPortServiceStatus:
                  description: Status of Cloud IDE service for custom ports. Created only if the robot has an additional config with key `IDE_CUSTOM_PORT_RANGE`.
                  properties:
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    urls:
                      additionalProperties:
                        type: string
                      description: Connection URL.
                      type: object
                  type: object
                ingressStatus:
                  description: Status of Cloud IDE Ingress.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                phase:
                  description: Phase of RobotIDE.
                  type: string
                podStatus:
                  description: Status of Cloud IDE pod.
                  properties:
                    ip:
                      description: IP of the pod.
                      type: string
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                  type: object
                serviceExportStatus:
                  description: Status of Cloud IDE ServiceExport. Created only if the instance type is Physical Instance.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                serviceStatus:
                  description: Status of Cloud IDE service.
                  properties:
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    urls:
                      additionalProperties:
                        type: string
                      description: Connection URL.
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: robots.robot.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: robot.roboscale.io
  names:
    kind: Robot
    listKind: RobotList
    plural: robots
    singular: robot
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.robot.distributions
          name: Distributions
          type: string
        - jsonPath: .spec.environment.application.name
          name: Application
          type: string
        - jsonPath: .spec.environment.application.version
          name: Version
          type: string
        - jsonPath: .spec.environment.devspace.ubuntuDistro
          name: Ubuntu
          type: string
        - jsonPath: .spec.environment.devspace.version
          name: DevSpace
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Robot is the custom resource that contains ROS 2 components (Workloads, Cloud VDI, Cloud IDE, ROS Bridge, Configurational Resources), robolaunch Robot instances can be decomposed and distributed to both cloud instances and physical instances using federation.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the Robot.
              properties:
                additionalConfigs:
                  additionalProperties:
                    properties:
                      configType:
                        default: Operator
                        description: Config type is by default `Operator`. Other options are `Env` and `File`.
                        type: string
                      value:
                        description: Value of the corresponding config key.
                        type: string
                    type: object
                  description: Key value pairs that operator uses to extend configuration.
                  type: object
                environment:
                  description: Holds environment's configuration. Applied if `.spec.type` is `Environment` and must be `nil` otherwise.
                  properties:
                    application:
                      description: Application properties.
                      properties:
                        name:
                          description: Application name.
                          type: string
                        version:
                          description: Version of the application.
                          type: string
                      required:
                        - name
                        - version
                      type: object
                    devspace:
                      description: DevSpace image properties.
                      properties:
                        desktop:
                          description: Ubuntu desktop.
                          type: string
                        ubuntuDistro:
                          description: Ubuntu distribution of the environment.
                          type: string
                        version:
                          description: DevSpace image version.
                          type: string
                      required:
                        - desktop
                        - ubuntuDistro
                        - version
                      type: object
                    domain:
                      description: Domain of the environment.
                      type: string
                  required:
                    - application
                    - devspace
                    - domain
                  type: object
                robot:
                  description: Holds robot's configuration. Applied if `.spec.type` is `Robot` and must be `nil` otherwise.
                  properties:
                    discoveryServerTemplate:
                      description: Discovery server configurational parameters.
                      properties:
                        cluster:
                          description: Cloud instance name that holds DiscoveryServer instance with `Server` type. Should be empty if the type is `Server` since it takes cloud instance's name automatically. Should be set if the type is `Client`.
                          type: string
                        domainID:
                          description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                          maximum: 101
                          minimum: 0
                          type: integer
                        hostname:
                          description: If instance type is `Server`, it can be an arbitrary value. If instance type is `Client`, it should be the same with Server's hostname. Used for getting Server's IP over DNS.
                          type: string
                        reference:
                          description: Reference to the `Server` instance. It is used if `.spec.type` is `Client`. Referenced object can be previously provisioned in another cluster. In that case, cluster's name can be specified in `.spec.cluster` field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        subdomain:
                          description: If instance type is `Server`, it can be an arbitrary value. If instance type is `Client`, it should be the same with Server's subdomain. Used for getting Server's IP over DNS.
                          type: string
                        type:
                          description: Instance type can be either `Server` or `Client`. If `Server`, instance creates discovery server resources and workloads. Other `Client` instances can connect to the `Server` instance. If `Client`, instance tries to connect a `Server` instance and hold `Server` configuration in a ConfigMap.
                          type: string
                      required:
                        - domainID
                      type: object
                    distributions:
                      description: ROS 2 distributions to be used. You can select multiple distributions if they are supported in the same underlying OS. (eg. `foxy` and `galactic` are supported in Ubuntu Focal, so they can be used together but both cannot be used with `humble`)
                      items:
                        description: ROS 2 distribution selection. Currently supported distributions are Humble, Foxy, Galactic.
                        enum:
                          - foxy
                          - galactic
                          - humble
                        type: string
                      maxItems: 2
                      minItems: 1
                      type: array
                    domainID:
                      description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                      maximum: 101
                      minimum: 0
                      type: integer
                    rmwImplementation:
                      description: RMW implementation selection. Robot operator currently supports only FastRTPS. See https://docs.ros.org/en/foxy/How-To-Guides/Working-with-multiple-RMW-implementations.html.
                      enum:
                        - rmw_fastrtps_cpp
                      type: string
                    rosBridgeTemplate:
                      description: ROS bridge configurational parameters.
                      properties:
                        ingress:
                          description: '[*alpha*] ROSBridge will create an Ingress resource if `true`.'
                          type: boolean
                        ros:
                          description: Configurational parameters for ROS bridge.
                          properties:
                            distro:
                              description: ROS distribution for bridge.
                              enum:
                                - foxy
                                - galactic
                                - humble
                              type: string
                            enabled:
                              description: If `true`, resources and workloads are created by ROSBridge.
                              type: boolean
                          type: object
                        ros2:
                          description: Configurational parameters for ROS 2 bridge.
                          properties:
                            distro:
                              description: ROS distribution for bridge.
                              enum:
                                - foxy
                                - galactic
                                - humble
                              type: string
                            enabled:
                              description: If `true`, resources and workloads are created by ROSBridge.
                              type: boolean
                          type: object
                        serviceType:
                          description: Service type of ROSBridge. `ClusterIP` and `NodePort` is supported.
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                      type: object
                  required:
                    - domainID
                  type: object
                robotDevSuiteTemplate:
                  description: Robot development suite template
                  properties:
                    ideEnabled:
                      description: If `true`, a Cloud IDE will be provisioned inside development suite.
                      type: boolean
                    remoteIDEEnabled:
                      description: If `true`, a relay server for remote Cloud IDE will be provisioned inside development suite.
                      type: boolean
                    remoteIDERelayServerTemplate:
                      description: Configurational parameters of remote IDE. Applied if `.spec.remoteIDEEnabled` is set to `true`.
                      properties:
                        hostname:
                          description: Hostname of the remote pod.
                          type: string
                        instanceName:
                          description: Remote instance name.
                          type: string
                        remoteNamespace:
                          description: Remote namespace.
                          type: string
                        remotePort:
                          description: Remote port.
                          type: integer
                        rootDNSConfig:
                          description: '[*alpha*] Root DNS configuration.'
                          properties:
                            host:
                              description: '[*alpha*] Root DNS name..'
                              type: string
                          required:
                            - host
                          type: object
                        subdomain:
                          description: Subdomain of the remote pod. It's also same with remote service's name.
                          type: string
                        tlsSecretRef:
                          description: '[*alpha*] TLS secret reference.'
                          properties:
                            name:
                              description: '[*alpha*] TLS secret object name.'
                              type: string
                            namespace:
                              description: '[*alpha*] TLS secret object namespace.'
                              type: string
                          required:
                            - name
                            - namespace
                          type: object
                      type: object
                    robotIDETemplate:
                      description: Configurational parameters of RobotIDE. Applied if `.spec.ideEnabled` is set to `true`.
                      properties:
                        display:
                          description: Cloud IDE connects an X11 socket if it's set to `true` and a target RobotVDI resource is set in labels with key `robolaunch.io/target-vdi`. Applications that requires GUI can be executed such as rViz.
                          type: boolean
                        ingress:
                          description: '[*alpha*] RobotIDE will create an Ingress resource if `true`.'
                          type: boolean
                        privileged:
                          description: If `true`, containers of RobotIDE will be privileged containers. It can be used in physical instances where it's necessary to access I/O devices on the host machine. Not recommended to activate this field on cloud instances.
                          type: boolean
                        resources:
                          description: Resource limitations of Cloud IDE.
                          properties:
                            cpu:
                              description: CPU resource limit.
                              pattern: ^([0-9])+(m)$
                              type: string
                            gpuCore:
                              description: GPU core number that will be allocated.
                              type: integer
                            gpuInstance:
                              default: nvidia.com/gpu
                              description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb. Defaults to "nvidia.com/gpu".
                              type: string
                            memory:
                              description: Memory resource limit.
                              pattern: ^([0-9])+(Mi|Gi)$
                              type: string
                          type: object
                        serviceType:
                          default: NodePort
                          description: Service type of Cloud IDE. `ClusterIP` and `NodePort` is supported.
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                      type: object
                    robotVDITemplate:
                      description: Configurational parameters of RobotVDI. Applied if `.spec.vdiEnabled` is set to `true`.
                      properties:
                        disableNvenc:
                          description: If true, VDI uses plain h264 instead of nvh264enc.
                          type: boolean
                        ingress:
                          description: '[*alpha*] RobotIDE will create an Ingress resource if `true`.'
                          type: boolean
                        nat1to1:
                          description: NAT1TO1 option for Cloud VDI.
                          type: string
                        privileged:
                          description: If `true`, containers of RobotIDE will be privileged containers. It can be used in physical instances where it's necessary to access I/O devices on the host machine. Not recommended to activate this field on cloud instances.
                          type: boolean
                        resolution:
                          default: 2048x1152
                          description: VDI screen resolution options. Default is `2048x1152`.
                          enum:
                            - 2048x1152
                            - 1920x1080
                            - 1600x1200
                          type: string
                        resources:
                          description: Resource limitations of Cloud IDE.
                          properties:
                            cpu:
                              description: CPU resource limit.
                              pattern: ^([0-9])+(m)$
                              type: string
                            gpuCore:
                              description: GPU core number that will be allocated.
                              type: integer
                            gpuInstance:
                              default: nvidia.com/gpu
                              description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb. Defaults to "nvidia.com/gpu".
                              type: string
                            memory:
                              description: Memory resource limit.
                              pattern: ^([0-9])+(Mi|Gi)$
                              type: string
                          type: object
                        serviceType:
                          default: NodePort
                          description: Service type of Cloud IDE. `ClusterIP` and `NodePort` is supported.
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                        webrtcPortRange:
                          description: UDP port range to used in WebRTC connections.
                          pattern: ^([0-9])+-([0-9])+$
                          type: string
                      type: object
                    vdiEnabled:
                      description: If `true`, a Cloud VDI will be provisioned inside development suite.
                      type: boolean
                  type: object
                rootDNSConfig:
                  description: '[*alpha*] Root DNS configuration.'
                  properties:
                    host:
                      description: '[*alpha*] Root DNS name..'
                      type: string
                  required:
                    - host
                  type: object
                storage:
                  description: Total storage amount to persist via Robot. Unit of measurement is MB. (eg. `10240` corresponds 10 GB) This amount is being shared between different components.
                  properties:
                    amount:
                      default: 10000
                      description: Specifies how much storage will be allocated in total. Use MB as a unit of measurement. (eg. `10240` is equal to 10 GB)
                      type: integer
                    storageClassConfig:
                      description: Storage class selection for robot's volumes.
                      properties:
                        accessMode:
                          description: PVC access modes. Currently, only `ReadWriteOnce` is supported.
                          type: string
                        name:
                          description: Storage class name.
                          type: string
                      type: object
                  type: object
                tlsSecretRef:
                  description: '[*alpha*] TLS secret reference.'
                  properties:
                    name:
                      description: '[*alpha*] TLS secret object name.'
                      type: string
                    namespace:
                      description: '[*alpha*] TLS secret object namespace.'
                      type: string
                  required:
                    - name
                    - namespace
                  type: object
                type:
                  description: Determines the object type. If "Environment", operator will provision an environment according to the specifications. (`.spec.environment`) If "Robot", operator will provision an environment specialized for ROS 2 according to the specifications. (`.spec.robot`)
                  type: string
                workspaceManagerTemplate:
                  description: Workspace manager template to configure ROS 2 workspaces.
                  properties:
                    updateNeeded:
                      description: WorkspaceManager is triggered if this field is set to `true`. Then the workspaces are being configured again while backing up the old configurations. This field is often used by operator.
                      type: boolean
                    workspaces:
                      description: Workspace definitions of robot. Multiple ROS 2 workspaces can be configured over this field.
                      items:
                        description: Workspace description. Each robot should contain at least one workspace. A workspace should contain at least one repository in it.
                        properties:
                          distro:
                            description: ROS 2 distribution selection. Currently supported distributions are Humble, Foxy, Galactic.
                            enum:
                              - foxy
                              - galactic
                              - humble
                            type: string
                          name:
                            description: Name of workspace. If a workspace's name is `my_ws`, it's absolute path is `/home/workspaces/my_ws`.
                            type: string
                          repositories:
                            additionalProperties:
                              description: Repository description.
                              properties:
                                branch:
                                  description: Branch of the repository to clone.
                                  type: string
                                hash:
                                  description: '[*Autofilled*] Hash of last commit'
                                  type: string
                                owner:
                                  description: '[*Autofilled*] User or organization, maintainer of repository'
                                  type: string
                                path:
                                  description: '[*Autofilled*] Absolute path of repository'
                                  type: string
                                repo:
                                  description: '[*Autofilled*] Repository name'
                                  type: string
                                url:
                                  description: Base URL of the repository.
                                  type: string
                              required:
                                - branch
                                - url
                              type: object
                            description: Repositories to clone inside workspace's `src` directory.
                            type: object
                        required:
                          - distro
                          - name
                          - repositories
                        type: object
                      minItems: 1
                      type: array
                    workspacesPath:
                      description: Global path of workspaces. It's fixed to `/root/workspaces` path.
                      type: string
                  type: object
              type: object
            status:
              description: Most recently observed status of the Robot.
              properties:
                attachedBuildObject:
                  description: Attached build object information. A BuildManager can be attached with a label on it with key `robolaunch.io/target-robot` and value of the target robot's name. Robot sorts the BuildManagers targeted itself, and picks the last created object to process.
                  properties:
                    reference:
                      description: Reference to the BuildManager instance.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    status:
                      description: Status of attached BuildManager.
                      properties:
                        active:
                          description: Indicates if the BuildManager is currently executing it's jobs.
                          type: boolean
                        phase:
                          description: Phase of BuildManager.
                          type: string
                        scriptConfigMapStatus:
                          description: Status of the ConfigMap that holds scripts. If a script is specified inside `.spec.steps[k]`, they are mounted to the step jobs via this ConfigMap.
                          properties:
                            created:
                              description: Shows if the owned resource is created.
                              type: boolean
                            phase:
                              description: Phase of the owned resource.
                              type: string
                            reference:
                              description: Reference to the owned resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - created
                          type: object
                        steps:
                          description: Statuses of the build steps.
                          items:
                            properties:
                              resource:
                                description: Generic status for any owned resource.
                                properties:
                                  created:
                                    description: Shows if the owned resource is created.
                                    type: boolean
                                  phase:
                                    description: Phase of the owned resource.
                                    type: string
                                  reference:
                                    description: Reference to the owned resource.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - created
                                type: object
                              step:
                                description: Status of the step.
                                properties:
                                  command:
                                    description: Bash command to run. Assume that your command will be `/bin/bash -c <COMMAND>`. Use logical operators (eg. `&&`) and pipes if the multiple dependent commands will be executed.
                                    type: string
                                  env:
                                    description: Environment variables for step.
                                    items:
                                      description: EnvVar represents an environment variable present in a Container.
                                      properties:
                                        name:
                                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                                          type: string
                                        value:
                                          description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                          type: string
                                        valueFrom:
                                          description: Source for the environment variable's value. Cannot be used if value is not empty.
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                                - key
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            fieldRef:
                                              description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to select in the specified API version.
                                                  type: string
                                              required:
                                                - fieldPath
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            resourceFieldRef:
                                              description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required for volumes, optional for env vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: Specifies the output format of the exposed resources, defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource to select'
                                                  type: string
                                              required:
                                                - resource
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            secretKeyRef:
                                              description: Selects a key of a secret in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret to select from.  Must be a valid secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the Secret or its key must be defined
                                                  type: boolean
                                              required:
                                                - key
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                      required:
                                        - name
                                      type: object
                                    type: array
                                  instances:
                                    description: Cluster selector. If the current instance name is on the list, BuildManager creates building jobs.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: Name of the step.
                                    type: string
                                  script:
                                    description: Bash script to run.
                                    type: string
                                  workspace:
                                    description: Name of the workspace. Should be selected among the existing workspaces in WorkspaceManager's manifests.
                                    type: string
                                required:
                                  - name
                                  - workspace
                                type: object
                            type: object
                          type: array
                      type: object
                  type: object
                attachedDevObjects:
                  description: '[*alpha*] Attached dev object information.'
                  items:
                    properties:
                      reference:
                        description: Reference to the RobotDevSuite instance.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      status:
                        description: Status of attached RobotDevSuite.
                        properties:
                          active:
                            description: '[*alpha*] Indicates if RobotDevSuite is attached to a Robot and actively provisioned it''s resources.'
                            type: boolean
                          phase:
                            description: Phase of RobotDevSuite.
                            type: string
                          remoteIDERelayServerStatus:
                            description: Status of remote Cloud IDE RelayServer. Created only if the instance type is Physical Instance.
                            properties:
                              connections:
                                additionalProperties:
                                  type: string
                                description: Address of the robot service that can be reached from outside.
                                type: object
                              resource:
                                description: Generic status for any owned resource.
                                properties:
                                  created:
                                    description: Shows if the owned resource is created.
                                    type: boolean
                                  phase:
                                    description: Phase of the owned resource.
                                    type: string
                                  reference:
                                    description: Reference to the owned resource.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - created
                                type: object
                            type: object
                          robotIDEStatus:
                            description: Status of RobotIDE.
                            properties:
                              connections:
                                additionalProperties:
                                  type: string
                                description: Address of the robot service that can be reached from outside.
                                type: object
                              resource:
                                description: Generic status for any owned resource.
                                properties:
                                  created:
                                    description: Shows if the owned resource is created.
                                    type: boolean
                                  phase:
                                    description: Phase of the owned resource.
                                    type: string
                                  reference:
                                    description: Reference to the owned resource.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - created
                                type: object
                            type: object
                          robotVDIStatus:
                            description: Status of RobotVDI.
                            properties:
                              connections:
                                additionalProperties:
                                  type: string
                                description: Address of the robot service that can be reached from outside.
                                type: object
                              resource:
                                description: Generic status for any owned resource.
                                properties:
                                  created:
                                    description: Shows if the owned resource is created.
                                    type: boolean
                                  phase:
                                    description: Phase of the owned resource.
                                    type: string
                                  reference:
                                    description: Reference to the owned resource.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - created
                                type: object
                            type: object
                        type: object
                    type: object
                  type: array
                attachedLaunchObjects:
                  description: Attached launch object information. A LaunchManager can be attached with a label on it with key `robolaunch.io/target-robot` and value of the target robot's name. Multiple LaunchManager could work together if they targeted the same Robot.
                  items:
                    properties:
                      reference:
                        description: Reference to the LaunchManager instance.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      status:
                        description: Status of attached LaunchManager.
                        properties:
                          active:
                            description: Indicates if the LaunchManager is attached to a Robot and actively running.
                            type: boolean
                          launchPodStatus:
                            description: Collective statuses of launch pod and launch objects.
                            properties:
                              launchStatus:
                                additionalProperties:
                                  properties:
                                    active:
                                      description: Inditaces if the launch process are actively running on cluster. It may not be selected by launch cluster selectors.
                                      type: boolean
                                    containerStatus:
                                      description: Statuses of the containers of pods owned by LaunchManager.
                                      properties:
                                        containerID:
                                          description: Container's ID in the format '<type>://<container_id>'.
                                          type: string
                                        image:
                                          description: 'The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images.'
                                          type: string
                                        imageID:
                                          description: ImageID of the container's image.
                                          type: string
                                        lastState:
                                          description: Details about the container's last termination condition.
                                          properties:
                                            running:
                                              description: Details about a running container
                                              properties:
                                                startedAt:
                                                  description: Time at which the container was last (re-)started
                                                  format: date-time
                                                  type: string
                                              type: object
                                            terminated:
                                              description: Details about a terminated container
                                              properties:
                                                containerID:
                                                  description: Container's ID in the format '<type>://<container_id>'
                                                  type: string
                                                exitCode:
                                                  description: Exit status from the last termination of the container
                                                  format: int32
                                                  type: integer
                                                finishedAt:
                                                  description: Time at which the container last terminated
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: Message regarding the last termination of the container
                                                  type: string
                                                reason:
                                                  description: (brief) reason from the last termination of the container
                                                  type: string
                                                signal:
                                                  description: Signal from the last termination of the container
                                                  format: int32
                                                  type: integer
                                                startedAt:
                                                  description: Time at which previous execution of the container started
                                                  format: date-time
                                                  type: string
                                              required:
                                                - exitCode
                                              type: object
                                            waiting:
                                              description: Details about a waiting container
                                              properties:
                                                message:
                                                  description: Message regarding why the container is not yet running.
                                                  type: string
                                                reason:
                                                  description: (brief) reason the container is not yet running.
                                                  type: string
                                              type: object
                                          type: object
                                        name:
                                          description: This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
                                          type: string
                                        ready:
                                          description: Specifies whether the container has passed its readiness probe.
                                          type: boolean
                                        restartCount:
                                          description: The number of times the container has been restarted.
                                          format: int32
                                          type: integer
                                        started:
                                          description: Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.
                                          type: boolean
                                        state:
                                          description: Details about the container's current condition.
                                          properties:
                                            running:
                                              description: Details about a running container
                                              properties:
                                                startedAt:
                                                  description: Time at which the container was last (re-)started
                                                  format: date-time
                                                  type: string
                                              type: object
                                            terminated:
                                              description: Details about a terminated container
                                              properties:
                                                containerID:
                                                  description: Container's ID in the format '<type>://<container_id>'
                                                  type: string
                                                exitCode:
                                                  description: Exit status from the last termination of the container
                                                  format: int32
                                                  type: integer
                                                finishedAt:
                                                  description: Time at which the container last terminated
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: Message regarding the last termination of the container
                                                  type: string
                                                reason:
                                                  description: (brief) reason from the last termination of the container
                                                  type: string
                                                signal:
                                                  description: Signal from the last termination of the container
                                                  format: int32
                                                  type: integer
                                                startedAt:
                                                  description: Time at which previous execution of the container started
                                                  format: date-time
                                                  type: string
                                              required:
                                                - exitCode
                                              type: object
                                            waiting:
                                              description: Details about a waiting container
                                              properties:
                                                message:
                                                  description: Message regarding why the container is not yet running.
                                                  type: string
                                                reason:
                                                  description: (brief) reason the container is not yet running.
                                                  type: string
                                              type: object
                                          type: object
                                      required:
                                        - image
                                        - imageID
                                        - name
                                        - ready
                                        - restartCount
                                      type: object
                                  type: object
                                description: Status of launch objects. Every launch object generates a `ros2 launch` command that will run as an entrypoint in a container.
                                type: object
                              status:
                                description: Launch pod status. Every LaunchManager creates one pod if active.
                                properties:
                                  ip:
                                    description: IP of the pod.
                                    type: string
                                  resource:
                                    description: Generic status for any owned resource.
                                    properties:
                                      created:
                                        description: Shows if the owned resource is created.
                                        type: boolean
                                      phase:
                                        description: Phase of the owned resource.
                                        type: string
                                      reference:
                                        description: Reference to the owned resource.
                                        properties:
                                          apiVersion:
                                            description: API version of the referent.
                                            type: string
                                          fieldPath:
                                            description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                            type: string
                                          kind:
                                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                            type: string
                                          namespace:
                                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                            type: string
                                          resourceVersion:
                                            description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                            type: string
                                          uid:
                                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                            type: string
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    required:
                                      - created
                                    type: object
                                type: object
                            type: object
                          phase:
                            description: Phase of LaunchManager.
                            type: string
                        type: object
                    type: object
                  type: array
                discoveryServerStatus:
                  description: Discovery server instance status.
                  properties:
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    status:
                      description: Status of the DiscoveryServer instance.
                      properties:
                        configMapStatus:
                          description: Status of the DiscoveryServer config map.
                          properties:
                            created:
                              description: Shows if the owned resource is created.
                              type: boolean
                            phase:
                              description: Phase of the owned resource.
                              type: string
                            reference:
                              description: Reference to the owned resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - created
                          type: object
                        connectionInfo:
                          description: Connection information.
                          properties:
                            configMapName:
                              description: Name of the config map that holds discovery server configuration.
                              type: string
                            ip:
                              description: IP of the discovery server. IP is being obtained from the DNS name, which is being built according to the discovery server configuration.
                              type: string
                            uri:
                              description: URI of the discovery server. Discovery server instance tries to ping this address to see if it's reachable.
                              type: string
                          type: object
                        phase:
                          description: Phase of the DiscoveryServer.
                          type: string
                        podStatus:
                          description: Status of the DiscoveryServer pod.
                          properties:
                            ip:
                              description: IP of the pod.
                              type: string
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                                - created
                              type: object
                          type: object
                        serviceExportStatus:
                          description: Status of the DiscoveryServer ServiceExport.
                          properties:
                            created:
                              description: Shows if the owned resource is created.
                              type: boolean
                            phase:
                              description: Phase of the owned resource.
                              type: string
                            reference:
                              description: Reference to the owned resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - created
                          type: object
                        serviceStatus:
                          description: Status of the DiscoveryServer service.
                          properties:
                            created:
                              description: Shows if the owned resource is created.
                              type: boolean
                            phase:
                              description: Phase of the owned resource.
                              type: string
                            reference:
                              description: Reference to the owned resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - created
                          type: object
                      type: object
                  type: object
                hostDirs:
                  description: '[*alpha*] List of directories mounted from host.'
                  items:
                    properties:
                      hostPath:
                        type: string
                      internalPath:
                        type: string
                      name:
                        type: string
                    type: object
                  type: array
                image:
                  description: Main image of Robot. It is derived either from the specifications or determined directly over labels.
                  type: string
                loaderJobStatus:
                  description: Status of loader job that configures environment.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                nodeName:
                  description: Node that Robot uses. It is selected via tenancy labels.
                  type: string
                persistentDirs:
                  description: '[*alpha*] Status of PVCs of persistent directories.'
                  items:
                    properties:
                      path:
                        type: string
                      status:
                        description: Generic status for any owned resource.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                          - created
                        type: object
                    type: object
                  type: array
                phase:
                  description: Phase of Robot. It sums the general status of Robot.
                  type: string
                robotDevSuiteStatus:
                  description: Robot development suite instance status.
                  properties:
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    status:
                      description: Status of the RobotDevSuite instance.
                      properties:
                        active:
                          description: '[*alpha*] Indicates if RobotDevSuite is attached to a Robot and actively provisioned it''s resources.'
                          type: boolean
                        phase:
                          description: Phase of RobotDevSuite.
                          type: string
                        remoteIDERelayServerStatus:
                          description: Status of remote Cloud IDE RelayServer. Created only if the instance type is Physical Instance.
                          properties:
                            connections:
                              additionalProperties:
                                type: string
                              description: Address of the robot service that can be reached from outside.
                              type: object
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                                - created
                              type: object
                          type: object
                        robotIDEStatus:
                          description: Status of RobotIDE.
                          properties:
                            connections:
                              additionalProperties:
                                type: string
                              description: Address of the robot service that can be reached from outside.
                              type: object
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                                - created
                              type: object
                          type: object
                        robotVDIStatus:
                          description: Status of RobotVDI.
                          properties:
                            connections:
                              additionalProperties:
                                type: string
                              description: Address of the robot service that can be reached from outside.
                              type: object
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                                - created
                              type: object
                          type: object
                      type: object
                  type: object
                rosBridgeStatus:
                  description: ROS bridge instance status.
                  properties:
                    connection:
                      description: Address of the robot service that can be reached from outside.
                      type: string
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    status:
                      description: Status of the ROSBridge instance.
                      properties:
                        ingressStatus:
                          description: Status of ROSBridge Ingress.
                          properties:
                            created:
                              description: Shows if the owned resource is created.
                              type: boolean
                            phase:
                              description: Phase of the owned resource.
                              type: string
                            reference:
                              description: Reference to the owned resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - created
                          type: object
                        phase:
                          description: Phase of ROSBridge.
                          type: string
                        podStatus:
                          description: Status of ROSBridge pod.
                          properties:
                            created:
                              description: Shows if the owned resource is created.
                              type: boolean
                            phase:
                              description: Phase of the owned resource.
                              type: string
                            reference:
                              description: Reference to the owned resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - created
                          type: object
                        serviceStatus:
                          description: Status of ROSBridge service.
                          properties:
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                                - created
                              type: object
                            urls:
                              additionalProperties:
                                type: string
                              description: Connection URL.
                              type: object
                          type: object
                      type: object
                  type: object
                uid:
                  description: User ID of robolaunch user in image.
                  format: int64
                  type: integer
                workspaceManagerStatus:
                  description: Workspace manager instance status if exists.
                  properties:
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    status:
                      description: Status of the WorkspaceManager instance.
                      properties:
                        cleanupJobStatus:
                          description: Status of cleanup jobs that runs while reconfiguring workspaces.
                          properties:
                            created:
                              description: Shows if the owned resource is created.
                              type: boolean
                            phase:
                              description: Phase of the owned resource.
                              type: string
                            reference:
                              description: Reference to the owned resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - created
                          type: object
                        clonerJobStatus:
                          description: Status of cloner job.
                          properties:
                            created:
                              description: Shows if the owned resource is created.
                              type: boolean
                            phase:
                              description: Phase of the owned resource.
                              type: string
                            reference:
                              description: Reference to the owned resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - created
                          type: object
                        phase:
                          description: Phase of WorkspaceManager.
                          type: string
                        version:
                          description: Incremental version of workspace configuration map. Used to determine changes in configuration.
                          type: integer
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: robotvdis.robot.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: robot.roboscale.io
  names:
    kind: RobotVDI
    listKind: RobotVDIList
    plural: robotvdis
    singular: robotvdi
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.resolution
          name: Resolution
          type: string
        - jsonPath: .spec.webrtcPortRange
          name: Ports
          type: string
        - jsonPath: .spec.privileged
          name: Privileged
          type: string
        - jsonPath: .spec.resources.gpuCore
          name: GPU
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RobotVDI creates and manages Cloud VDI resources and workloads.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the RobotVDI.
              properties:
                disableNvenc:
                  description: If true, VDI uses plain h264 instead of nvh264enc.
                  type: boolean
                ingress:
                  description: '[*alpha*] RobotIDE will create an Ingress resource if `true`.'
                  type: boolean
                nat1to1:
                  description: NAT1TO1 option for Cloud VDI.
                  type: string
                privileged:
                  description: If `true`, containers of RobotIDE will be privileged containers. It can be used in physical instances where it's necessary to access I/O devices on the host machine. Not recommended to activate this field on cloud instances.
                  type: boolean
                resolution:
                  default: 2048x1152
                  description: VDI screen resolution options. Default is `2048x1152`.
                  enum:
                    - 2048x1152
                    - 1920x1080
                    - 1600x1200
                  type: string
                resources:
                  description: Resource limitations of Cloud IDE.
                  properties:
                    cpu:
                      description: CPU resource limit.
                      pattern: ^([0-9])+(m)$
                      type: string
                    gpuCore:
                      description: GPU core number that will be allocated.
                      type: integer
                    gpuInstance:
                      default: nvidia.com/gpu
                      description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb. Defaults to "nvidia.com/gpu".
                      type: string
                    memory:
                      description: Memory resource limit.
                      pattern: ^([0-9])+(Mi|Gi)$
                      type: string
                  type: object
                serviceType:
                  default: NodePort
                  description: Service type of Cloud IDE. `ClusterIP` and `NodePort` is supported.
                  enum:
                    - ClusterIP
                    - NodePort
                  type: string
                webrtcPortRange:
                  description: UDP port range to used in WebRTC connections.
                  pattern: ^([0-9])+-([0-9])+$
                  type: string
              type: object
            status:
              description: Most recently observed status of the RobotVDI.
              properties:
                customPortIngressStatus:
                  description: Status of Cloud IDE ingress for custom ports service. Created only if the robot has an additional config with key `IDE_CUSTOM_PORT_RANGE` and `.spec.ingress` is `true`.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                customPortServiceStatus:
                  description: Status of Cloud IDE service for custom ports. Created only if the robot has an additional config with key `IDE_CUSTOM_PORT_RANGE`.
                  properties:
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    urls:
                      additionalProperties:
                        type: string
                      description: Connection URL.
                      type: object
                  type: object
                ingressStatus:
                  description: Status of Cloud VDI Ingress.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                phase:
                  description: Phase of RobotVDI.
                  type: string
                podStatus:
                  description: Status of Cloud VDI pod.
                  properties:
                    ip:
                      description: IP of the pod.
                      type: string
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                  type: object
                pvcStatus:
                  description: Status of Cloud VDI persistent volume claim. This PVC dynamically provisions a volume that is a shared between RobotVDI workloads and other workloads that requests display.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                serviceTCPStatus:
                  description: Status of Cloud VDI TCP service.
                  properties:
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    urls:
                      additionalProperties:
                        type: string
                      description: Connection URL.
                      type: object
                  type: object
                serviceUDPStatus:
                  description: Status of Cloud VDI UDP service.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: rosbridges.robot.roboscale.io
spec:
  group: robot.roboscale.io
  names:
    kind: ROSBridge
    listKind: ROSBridgeList
    plural: rosbridges
    singular: rosbridge
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ROSBridge is a custom resource that provisions ROS/2 bridge resources and workloads. It could also convert ROS 2 topics to ROS topics using ROS 1 to 2 bridge. (see https://github.com/ros2/ros1_bridge)
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the ROSBridge.
              properties:
                ingress:
                  description: '[*alpha*] ROSBridge will create an Ingress resource if `true`.'
                  type: boolean
                ros:
                  description: Configurational parameters for ROS bridge.
                  properties:
                    distro:
                      description: ROS distribution for bridge.
                      enum:
                        - foxy
                        - galactic
                        - humble
                      type: string
                    enabled:
                      description: If `true`, resources and workloads are created by ROSBridge.
                      type: boolean
                  type: object
                ros2:
                  description: Configurational parameters for ROS 2 bridge.
                  properties:
                    distro:
                      description: ROS distribution for bridge.
                      enum:
                        - foxy
                        - galactic
                        - humble
                      type: string
                    enabled:
                      description: If `true`, resources and workloads are created by ROSBridge.
                      type: boolean
                  type: object
                serviceType:
                  description: Service type of ROSBridge. `ClusterIP` and `NodePort` is supported.
                  enum:
                    - ClusterIP
                    - NodePort
                  type: string
              type: object
            status:
              description: Most recently observed status of the ROSBridge.
              properties:
                ingressStatus:
                  description: Status of ROSBridge Ingress.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                phase:
                  description: Phase of ROSBridge.
                  type: string
                podStatus:
                  description: Status of ROSBridge pod.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                serviceStatus:
                  description: Status of ROSBridge service.
                  properties:
                    resource:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - created
                      type: object
                    urls:
                      additionalProperties:
                        type: string
                      description: Connection URL.
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: serviceexports.multicluster.x-k8s.io
spec:
  group: multicluster.x-k8s.io
  names:
    kind: ServiceExport
    listKind: ServiceExportList
    plural: serviceexports
    singular: serviceexport
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceExport declares that the Service with the same name and namespace as this export should be consumable from other clusters.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            status:
              description: status describes the current state of an exported service. Service configuration comes from the Service that had the same name and namespace as this ServiceExport. Populated by the multi-cluster service implementation's controller.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: serviceimports.multicluster.x-k8s.io
spec:
  group: multicluster.x-k8s.io
  names:
    kind: ServiceImport
    listKind: ServiceImportList
    plural: serviceimports
    singular: serviceimport
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceImport describes a service imported from clusters in a ClusterSet.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec defines the behavior of a ServiceImport.
              properties:
                ips:
                  description: ip will be used as the VIP for this service when type is ClusterSetIP.
                  items:
                    type: string
                  maxItems: 1
                  type: array
                ports:
                  items:
                    description: ServicePort represents the port on which the service is exposed
                    properties:
                      appProtocol:
                        description: The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.
                        type: string
                      name:
                        description: The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                        type: string
                      port:
                        description: The port that will be exposed by this service.
                        format: int32
                        type: integer
                      protocol:
                        default: TCP
                        description: The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                        type: string
                    required:
                      - port
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
                sessionAffinity:
                  description: 'Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. Ignored when type is Headless More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                  type: string
                sessionAffinityConfig:
                  description: sessionAffinityConfig contains session affinity configuration.
                  properties:
                    clientIP:
                      description: clientIP contains the configurations of Client IP based session affinity.
                      properties:
                        timeoutSeconds:
                          description: timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                          format: int32
                          type: integer
                      type: object
                  type: object
                type:
                  description: type defines the type of this service. Must be ClusterSetIP or Headless.
                  enum:
                    - ClusterSetIP
                    - Headless
                  type: string
              required:
                - ports
                - type
              type: object
            status:
              description: status contains information about the exported services that form the multi-cluster service referenced by this ServiceImport.
              properties:
                clusters:
                  description: clusters is the list of exporting clusters from which this service was derived.
                  items:
                    description: ClusterStatus contains service configuration mapped to a specific source cluster
                    properties:
                      cluster:
                        description: cluster is the name of the exporting cluster. Must be a valid RFC-1123 DNS label.
                        type: string
                    required:
                      - cluster
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - cluster
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: workspacemanagers.robot.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: robot.roboscale.io
  names:
    kind: WorkspaceManager
    listKind: WorkspaceManagerList
    plural: workspacemanagers
    singular: workspacemanager
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.workspacesPath
          name: Path
          type: string
        - jsonPath: .spec.workspaces[].name
          name: Workspaces
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkspaceManager configures the ROS 2 workspaces and repositories by executing Kubernetes jobs.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired behavior of the WorkspaceManager.
              properties:
                updateNeeded:
                  description: WorkspaceManager is triggered if this field is set to `true`. Then the workspaces are being configured again while backing up the old configurations. This field is often used by operator.
                  type: boolean
                workspaces:
                  description: Workspace definitions of robot. Multiple ROS 2 workspaces can be configured over this field.
                  items:
                    description: Workspace description. Each robot should contain at least one workspace. A workspace should contain at least one repository in it.
                    properties:
                      distro:
                        description: ROS 2 distribution selection. Currently supported distributions are Humble, Foxy, Galactic.
                        enum:
                          - foxy
                          - galactic
                          - humble
                        type: string
                      name:
                        description: Name of workspace. If a workspace's name is `my_ws`, it's absolute path is `/home/workspaces/my_ws`.
                        type: string
                      repositories:
                        additionalProperties:
                          description: Repository description.
                          properties:
                            branch:
                              description: Branch of the repository to clone.
                              type: string
                            hash:
                              description: '[*Autofilled*] Hash of last commit'
                              type: string
                            owner:
                              description: '[*Autofilled*] User or organization, maintainer of repository'
                              type: string
                            path:
                              description: '[*Autofilled*] Absolute path of repository'
                              type: string
                            repo:
                              description: '[*Autofilled*] Repository name'
                              type: string
                            url:
                              description: Base URL of the repository.
                              type: string
                          required:
                            - branch
                            - url
                          type: object
                        description: Repositories to clone inside workspace's `src` directory.
                        type: object
                    required:
                      - distro
                      - name
                      - repositories
                    type: object
                  minItems: 1
                  type: array
                workspacesPath:
                  description: Global path of workspaces. It's fixed to `/root/workspaces` path.
                  type: string
              type: object
            status:
              description: Most recently observed status of the WorkspaceManager.
              properties:
                cleanupJobStatus:
                  description: Status of cleanup jobs that runs while reconfiguring workspaces.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                clonerJobStatus:
                  description: Status of cloner job.
                  properties:
                    created:
                      description: Shows if the owned resource is created.
                      type: boolean
                    phase:
                      description: Phase of the owned resource.
                      type: string
                    reference:
                      description: Reference to the owned resource.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - created
                  type: object
                phase:
                  description: Phase of WorkspaceManager.
                  type: string
                version:
                  description: Incremental version of workspace configuration map. Used to determine changes in configuration.
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: robot-operator
  name: robot-controller-manager
  namespace: robot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: robot-operator
  name: robot-leader-election-role
  namespace: robot-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: robot-manager-role
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - buildmanagers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - buildmanagers/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - buildmanagers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - discoveryservers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - discoveryservers/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - discoveryservers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - launchmanagers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - launchmanagers/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - launchmanagers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - metricsexporters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - metricsexporters/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - metricsexporters/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - relayservers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - relayservers/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - relayservers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robotdevsuites
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robotdevsuites/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robotdevsuites/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robotides
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robotides/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robotides/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robots
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robots/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robots/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robotvdis
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robotvdis/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - robotvdis/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - rosbridges
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - rosbridges/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - rosbridges/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - workspacemanagers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - robot.roboscale.io
    resources:
      - workspacemanagers/finalizers
    verbs:
      - update
  - apiGroups:
      - robot.roboscale.io
    resources:
      - workspacemanagers/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: robot-operator
  name: robot-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: robot-operator
  name: robot-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: robot-operator
  name: robot-leader-election-rolebinding
  namespace: robot-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: robot-leader-election-role
subjects:
  - kind: ServiceAccount
    name: robot-controller-manager
    namespace: robot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: robot-operator
  name: robot-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: robot-manager-role
subjects:
  - kind: ServiceAccount
    name: robot-controller-manager
    namespace: robot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: robot-operator
  name: robot-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: robot-proxy-role
subjects:
  - kind: ServiceAccount
    name: robot-controller-manager
    namespace: robot-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: robot-operator
    control-plane: controller-manager
  name: robot-controller-manager-metrics-service
  namespace: robot-system
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: robot-operator
  name: robot-webhook-service
  namespace: robot-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: robot-operator
    control-plane: controller-manager
  name: robot-controller-manager
  namespace: robot-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                      - s390x
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          image: robolaunchio/robot-controller-manager:v0.2.6-alpha.14.3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: robot-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
      nodeSelector:
        robolaunch.io/organization: robolaunch
        robolaunch.io/team: robotics
        robolaunch.io/region: europe-east
        robolaunch.io/cloud-instance: cluster
        robolaunch.io/cloud-instance-alias: cluster-alias
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: robot-operator
  name: robot-serving-cert
  namespace: robot-system
spec:
  dnsNames:
    - robot-webhook-service.robot-system.svc
    - robot-webhook-service.robot-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: robot-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kuberentes.io/name: issuer
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/part-of: robot-operator
  name: robot-selfsigned-issuer
  namespace: robot-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: robot-operator
  name: robot-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-robotide
    failurePolicy: Fail
    name: mrobotide.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotides
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-robotvdi
    failurePolicy: Fail
    name: mrobotvdi.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotvdis
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-robotdevsuite
    failurePolicy: Fail
    name: mrobotdevsuite.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotdevsuites
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-workspacemanager
    failurePolicy: Fail
    name: mworkspacemanager.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - workspacemanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-buildmanager
    failurePolicy: Fail
    name: mbuildmanager.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - buildmanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-launchmanager
    failurePolicy: Fail
    name: mlaunchmanager.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - launchmanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-robot
    failurePolicy: Fail
    name: mrobot.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robots
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-discoveryserver
    failurePolicy: Fail
    name: mdiscoveryserver.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - discoveryservers
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: validatingwebhookconfiguration
    app.kubernetes.io/part-of: robot-operator
  name: robot-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-robotide
    failurePolicy: Fail
    name: vrobotide.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotides
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-robotvdi
    failurePolicy: Fail
    name: vrobotvdi.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotvdis
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-robotdevsuite
    failurePolicy: Fail
    name: vrobotdevsuite.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotdevsuites
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-workspacemanager
    failurePolicy: Fail
    name: vworkspacemanager.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - workspacemanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-buildmanager
    failurePolicy: Fail
    name: vbuildmanager.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - buildmanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-launchmanager
    failurePolicy: Fail
    name: vlaunchmanager.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - launchmanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-robot
    failurePolicy: Fail
    name: vrobot.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robots
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-discoveryserver
    failurePolicy: Fail
    name: vdiscoveryserver.kb.io
    rules:
      - apiGroups:
          - robot.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - discoveryservers
    sideEffects: None
