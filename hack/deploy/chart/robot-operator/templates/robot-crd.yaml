apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: robots.robot.roboscale.io
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "robot-operator.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.9.2
  labels:
  {{- include "robot-operator.labels" . | nindent 4 }}
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "robot-operator.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: robot.roboscale.io
  names:
    kind: Robot
    listKind: RobotList
    plural: robots
    singular: robot
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.robot.distributions
      name: Distributions
      type: string
    - jsonPath: .spec.environment.application.name
      name: Application
      type: string
    - jsonPath: .spec.environment.application.version
      name: Version
      type: string
    - jsonPath: .spec.environment.devspace.ubuntuDistro
      name: Ubuntu
      type: string
    - jsonPath: .spec.environment.devspace.version
      name: DevSpace
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Robot is the custom resource that contains ROS 2 components (Workloads,
          Cloud VDI, Cloud IDE, ROS Bridge, Configurational Resources), robolaunch Robot
          instances can be decomposed and distributed to both cloud instances and physical
          instances using federation.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the Robot.
            properties:
              additionalConfigs:
                additionalProperties:
                  properties:
                    configType:
                      default: Operator
                      description: Config type is by default `Operator`. Other options
                        are `Env` and `File`.
                      type: string
                    value:
                      description: Value of the corresponding config key.
                      type: string
                  type: object
                description: Key value pairs that operator uses to extend configuration.
                type: object
              environment:
                description: Holds environment's configuration. Applied if `.spec.type`
                  is `Environment` and must be `nil` otherwise.
                properties:
                  application:
                    description: Application properties.
                    properties:
                      name:
                        description: Application name.
                        type: string
                      version:
                        description: Version of the application.
                        type: string
                    required:
                    - name
                    - version
                    type: object
                  devspace:
                    description: DevSpace image properties.
                    properties:
                      desktop:
                        description: Ubuntu desktop.
                        type: string
                      ubuntuDistro:
                        description: Ubuntu distribution of the environment.
                        type: string
                      version:
                        description: DevSpace image version.
                        type: string
                    required:
                    - desktop
                    - ubuntuDistro
                    - version
                    type: object
                  domain:
                    description: Domain of the environment.
                    type: string
                required:
                - application
                - devspace
                - domain
                type: object
              robot:
                description: Holds robot's configuration. Applied if `.spec.type` is
                  `Robot` and must be `nil` otherwise.
                properties:
                  bridgeEnabled:
                    description: If enabled, ROSBridge object will be created.
                    type: boolean
                  discoveryServerTemplate:
                    description: Discovery server configurational parameters.
                    properties:
                      cluster:
                        description: Cloud instance name that holds DiscoveryServer
                          instance with `Server` type. Should be empty if the type is
                          `Server` since it takes cloud instance's name automatically.
                          Should be set if the type is `Client`.
                        type: string
                      domainID:
                        description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                        maximum: 101
                        minimum: 0
                        type: integer
                      hostname:
                        description: If instance type is `Server`, it can be an arbitrary
                          value. If instance type is `Client`, it should be the same
                          with Server's hostname. Used for getting Server's IP over
                          DNS.
                        type: string
                      reference:
                        description: Reference to the `Server` instance. It is used
                          if `.spec.type` is `Client`. Referenced object can be previously
                          provisioned in another cluster. In that case, cluster's name
                          can be specified in `.spec.cluster` field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      subdomain:
                        description: If instance type is `Server`, it can be an arbitrary
                          value. If instance type is `Client`, it should be the same
                          with Server's subdomain. Used for getting Server's IP over
                          DNS.
                        type: string
                      type:
                        description: Instance type can be either `Server` or `Client`.
                          If `Server`, instance creates discovery server resources and
                          workloads. Other `Client` instances can connect to the `Server`
                          instance. If `Client`, instance tries to connect a `Server`
                          instance and hold `Server` configuration in a ConfigMap.
                        type: string
                    required:
                    - domainID
                    type: object
                  distributions:
                    description: ROS 2 distributions to be used. You can select multiple
                      distributions if they are supported in the same underlying OS.
                      (eg. `foxy` and `galactic` are supported in Ubuntu Focal, so they
                      can be used together but both cannot be used with `humble`)
                    items:
                      description: ROS 2 distribution selection. Currently supported
                        distributions are Humble, Foxy, Galactic.
                      enum:
                      - foxy
                      - galactic
                      - humble
                      type: string
                    maxItems: 2
                    minItems: 1
                    type: array
                  domainID:
                    description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                    maximum: 101
                    minimum: 0
                    type: integer
                  rmwImplementation:
                    description: RMW implementation selection. Robot operator currently
                      supports only FastRTPS. See https://docs.ros.org/en/foxy/How-To-Guides/Working-with-multiple-RMW-implementations.html.
                    enum:
                    - rmw_fastrtps_cpp
                    type: string
                  rosBridgeTemplate:
                    description: ROS bridge configurational parameters.
                    properties:
                      distro:
                        description: Configurational parameters for ROS 2 bridge.
                        enum:
                        - foxy
                        - galactic
                        - humble
                        type: string
                      ingress:
                        description: '[*alpha*] ROSBridge will create an Ingress resource
                          if `true`.'
                        type: boolean
                      serviceType:
                        description: Service type of ROSBridge. `ClusterIP` and `NodePort`
                          is supported.
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                    type: object
                required:
                - domainID
                type: object
              robotDevSuiteTemplate:
                description: Robot development suite template
                properties:
                  ideEnabled:
                    description: If `true`, a Cloud IDE will be provisioned inside development
                      suite.
                    type: boolean
                  notebookEnabled:
                    description: If `true`, a Notebook will be provisioned inside development
                      suite.
                    type: boolean
                  notebookTemplate:
                    description: Configurational parameters of Notebook. Applied if
                      `.spec.notebookEnabled` is set to `true`.
                    properties:
                      display:
                        description: Notebook connects an X11 socket if it's set to
                          `true` and a target Notebook resource is set in labels with
                          key `robolaunch.io/target-vdi`. Applications that requires
                          GUI can be executed such as VLC.
                        type: boolean
                      ingress:
                        description: '[*alpha*] Notebook will create an Ingress resource
                          if `true`.'
                        type: boolean
                      privileged:
                        description: If `true`, containers of Notebook will be privileged
                          containers. It can be used in physical instances where it's
                          necessary to access I/O devices on the host machine. Not recommended
                          to activate this field on cloud instances.
                        type: boolean
                      resources:
                        description: Resource limitations of Notebook.
                        properties:
                          cpu:
                            description: CPU resource limit.
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            description: GPU core number that will be allocated.
                            type: integer
                          gpuInstance:
                            default: nvidia.com/gpu
                            description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb.
                              Defaults to "nvidia.com/gpu".
                            type: string
                          memory:
                            description: Memory resource limit.
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      serviceType:
                        default: NodePort
                        description: Service type of Notebook. `ClusterIP` and `NodePort`
                          is supported.
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                    type: object
                  remoteIDEEnabled:
                    description: If `true`, a relay server for remote Cloud IDE will
                      be provisioned inside development suite.
                    type: boolean
                  remoteIDERelayServerTemplate:
                    description: Configurational parameters of remote IDE. Applied if
                      `.spec.remoteIDEEnabled` is set to `true`.
                    properties:
                      hostname:
                        description: Hostname of the remote pod.
                        type: string
                      instanceName:
                        description: Remote instance name.
                        type: string
                      remoteNamespace:
                        description: Remote namespace.
                        type: string
                      remotePort:
                        description: Remote port.
                        type: integer
                      rootDNSConfig:
                        description: '[*alpha*] Root DNS configuration.'
                        properties:
                          host:
                            description: '[*alpha*] Root DNS name..'
                            type: string
                        required:
                        - host
                        type: object
                      subdomain:
                        description: Subdomain of the remote pod. It's also same with
                          remote service's name.
                        type: string
                      tlsSecretRef:
                        description: '[*alpha*] TLS secret reference.'
                        properties:
                          name:
                            description: '[*alpha*] TLS secret object name.'
                            type: string
                          namespace:
                            description: '[*alpha*] TLS secret object namespace.'
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                    type: object
                  robotIDETemplate:
                    description: Configurational parameters of RobotIDE. Applied if
                      `.spec.ideEnabled` is set to `true`.
                    properties:
                      display:
                        description: Cloud IDE connects an X11 socket if it's set to
                          `true` and a target RobotVDI resource is set in labels with
                          key `robolaunch.io/target-vdi`. Applications that requires
                          GUI can be executed such as rViz.
                        type: boolean
                      ingress:
                        description: '[*alpha*] RobotIDE will create an Ingress resource
                          if `true`.'
                        type: boolean
                      privileged:
                        description: If `true`, containers of RobotIDE will be privileged
                          containers. It can be used in physical instances where it's
                          necessary to access I/O devices on the host machine. Not recommended
                          to activate this field on cloud instances.
                        type: boolean
                      resources:
                        description: Resource limitations of Cloud IDE.
                        properties:
                          cpu:
                            description: CPU resource limit.
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            description: GPU core number that will be allocated.
                            type: integer
                          gpuInstance:
                            default: nvidia.com/gpu
                            description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb.
                              Defaults to "nvidia.com/gpu".
                            type: string
                          memory:
                            description: Memory resource limit.
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      serviceType:
                        default: NodePort
                        description: Service type of Cloud IDE. `ClusterIP` and `NodePort`
                          is supported.
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                    type: object
                  robotVDITemplate:
                    description: Configurational parameters of RobotVDI. Applied if
                      `.spec.vdiEnabled` is set to `true`.
                    properties:
                      disableNvenc:
                        description: If true, VDI uses plain h264 instead of nvh264enc.
                        type: boolean
                      ingress:
                        description: '[*alpha*] RobotIDE will create an Ingress resource
                          if `true`.'
                        type: boolean
                      nat1to1:
                        description: NAT1TO1 option for Cloud VDI.
                        type: string
                      privileged:
                        description: If `true`, containers of RobotIDE will be privileged
                          containers. It can be used in physical instances where it's
                          necessary to access I/O devices on the host machine. Not recommended
                          to activate this field on cloud instances.
                        type: boolean
                      resolution:
                        default: 2048x1152
                        description: VDI screen resolution options. Default is `2048x1152`.
                        enum:
                        - 2048x1152
                        - 1920x1080
                        - 1600x1200
                        type: string
                      resources:
                        description: Resource limitations of Cloud IDE.
                        properties:
                          cpu:
                            description: CPU resource limit.
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            description: GPU core number that will be allocated.
                            type: integer
                          gpuInstance:
                            default: nvidia.com/gpu
                            description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb.
                              Defaults to "nvidia.com/gpu".
                            type: string
                          memory:
                            description: Memory resource limit.
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      serviceType:
                        default: NodePort
                        description: Service type of Cloud IDE. `ClusterIP` and `NodePort`
                          is supported.
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                      webrtcPortRange:
                        description: UDP port range to used in WebRTC connections.
                        pattern: ^([0-9])+-([0-9])+$
                        type: string
                    type: object
                  vdiEnabled:
                    description: If `true`, a Cloud VDI will be provisioned inside development
                      suite.
                    type: boolean
                type: object
              rootDNSConfig:
                description: '[*alpha*] Root DNS configuration.'
                properties:
                  host:
                    description: '[*alpha*] Root DNS name..'
                    type: string
                required:
                - host
                type: object
              storage:
                description: Total storage amount to persist via Robot. Unit of measurement
                  is MB. (eg. `10240` corresponds 10 GB) This amount is being shared
                  between different components.
                properties:
                  amount:
                    default: 10000
                    description: Specifies how much storage will be allocated in total.
                      Use MB as a unit of measurement. (eg. `10240` is equal to 10 GB)
                    type: integer
                  storageClassConfig:
                    description: Storage class selection for robot's volumes.
                    properties:
                      accessMode:
                        description: PVC access modes. Currently, only `ReadWriteOnce`
                          is supported.
                        type: string
                      name:
                        description: Storage class name.
                        type: string
                    type: object
                type: object
              tlsSecretRef:
                description: '[*alpha*] TLS secret reference.'
                properties:
                  name:
                    description: '[*alpha*] TLS secret object name.'
                    type: string
                  namespace:
                    description: '[*alpha*] TLS secret object namespace.'
                    type: string
                required:
                - name
                - namespace
                type: object
              type:
                description: Determines the object type. If "Environment", operator
                  will provision an environment according to the specifications. (`.spec.environment`)
                  If "Robot", operator will provision an environment specialized for
                  ROS 2 according to the specifications. (`.spec.robot`)
                type: string
              workspaceManagerTemplate:
                description: Workspace manager template to configure ROS 2 workspaces.
                properties:
                  updateNeeded:
                    description: WorkspaceManager is triggered if this field is set
                      to `true`. Then the workspaces are being configured again while
                      backing up the old configurations. This field is often used by
                      operator.
                    type: boolean
                  workspaces:
                    description: Workspace definitions of robot. Multiple ROS 2 workspaces
                      can be configured over this field.
                    items:
                      description: Workspace description. Each robot should contain
                        at least one workspace. A workspace should contain at least
                        one repository in it.
                      properties:
                        distro:
                          description: ROS 2 distribution selection. Currently supported
                            distributions are Humble, Foxy, Galactic.
                          enum:
                          - foxy
                          - galactic
                          - humble
                          type: string
                        name:
                          description: Name of workspace. If a workspace's name is `my_ws`,
                            it's absolute path is `/home/workspaces/my_ws`.
                          type: string
                        repositories:
                          additionalProperties:
                            description: Repository description.
                            properties:
                              branch:
                                description: Branch of the repository to clone.
                                type: string
                              hash:
                                description: '[*Autofilled*] Hash of last commit'
                                type: string
                              owner:
                                description: '[*Autofilled*] User or organization, maintainer
                                  of repository'
                                type: string
                              path:
                                description: '[*Autofilled*] Absolute path of repository'
                                type: string
                              repo:
                                description: '[*Autofilled*] Repository name'
                                type: string
                              url:
                                description: Base URL of the repository.
                                type: string
                            required:
                            - branch
                            - url
                            type: object
                          description: Repositories to clone inside workspace's `src`
                            directory.
                          type: object
                      required:
                      - distro
                      - name
                      - repositories
                      type: object
                    minItems: 1
                    type: array
                  workspacesPath:
                    description: Global path of workspaces. It's fixed to `/root/workspaces`
                      path.
                    type: string
                type: object
            type: object
          status:
            description: Most recently observed status of the Robot.
            properties:
              attachedBuildObject:
                description: Attached build object information. A BuildManager can be
                  attached with a label on it with key `robolaunch.io/target-robot`
                  and value of the target robot's name. Robot sorts the BuildManagers
                  targeted itself, and picks the last created object to process.
                properties:
                  reference:
                    description: Reference to the BuildManager instance.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead of
                          an entire object, this string should contain a valid JSON/Go
                          field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part of
                          an object. TODO: this design is not final and this field is
                          subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  status:
                    description: Status of attached BuildManager.
                    properties:
                      active:
                        description: Indicates if the BuildManager is currently executing
                          it's jobs.
                        type: boolean
                      phase:
                        description: Phase of BuildManager.
                        type: string
                      scriptConfigMapStatus:
                        description: Status of the ConfigMap that holds scripts. If
                          a script is specified inside `.spec.steps[k]`, they are mounted
                          to the step jobs via this ConfigMap.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                      steps:
                        description: Statuses of the build steps.
                        items:
                          properties:
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object
                                        instead of an entire object, this string should
                                        contain a valid JSON/Go field access statement,
                                        such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a
                                        container within a pod, this would take on a
                                        value like: "spec.containers{name}" (where "name"
                                        refers to the name of the container that triggered
                                        the event) or if no container name is specified
                                        "spec.containers[2]" (container with index 2
                                        in this pod). This syntax is chosen only to
                                        have some well-defined way of referencing a
                                        part of an object. TODO: this design is not
                                        final and this field is subject to change in
                                        the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which
                                        this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - created
                              type: object
                            step:
                              description: Status of the step.
                              properties:
                                command:
                                  description: Bash command to run. Assume that your
                                    command will be `/bin/bash -c <COMMAND>`. Use logical
                                    operators (eg. `&&`) and pipes if the multiple dependent
                                    commands will be executed.
                                  type: string
                                env:
                                  description: Environment variables for step.
                                  items:
                                    description: EnvVar represents an environment variable
                                      present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a variable
                                          cannot be resolved, the reference in the input
                                          string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the
                                          $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                          produce the string literal "$(VAR_NAME)".
                                          Escaped references will never be expanded,
                                          regardless of whether the variable exists
                                          or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the
                                                  FieldPath is written in terms of,
                                                  defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select
                                                  in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and requests
                                              (limits.cpu, limits.memory, limits.ephemeral-storage,
                                              requests.cpu, requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output format
                                                  of the exposed resources, defaults
                                                  to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret in
                                              the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret to
                                                  select from.  Must be a valid secret
                                                  key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                instances:
                                  description: Cluster selector. If the current instance
                                    name is on the list, BuildManager creates building
                                    jobs.
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: Name of the step.
                                  type: string
                                scope:
                                  description: Selects the scope for BuildManager step.
                                  properties:
                                    path:
                                      description: Absolute path of the directory. It's
                                        being applied if the scope type is `Path`.
                                      type: string
                                    scopeType:
                                      description: Type of the scope. Allowed scopes
                                        are `Workspace` and `Path`.
                                      enum:
                                      - Workspace
                                      - Path
                                      type: string
                                    workspace:
                                      description: Name of the workspace. Should be
                                        selected among the existing workspaces in WorkspaceManager's
                                        manifests. It's being applied if the scope type
                                        is `Workspace`.
                                      type: string
                                  required:
                                  - scopeType
                                  type: object
                                script:
                                  description: Bash script to run.
                                  type: string
                              required:
                              - name
                              - scope
                              type: object
                          type: object
                        type: array
                    type: object
                type: object
              attachedDevObjects:
                description: '[*alpha*] Attached dev object information.'
                items:
                  properties:
                    reference:
                      description: Reference to the RobotDevSuite instance.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within
                            a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]"
                            (container with index 2 in this pod). This syntax is chosen
                            only to have some well-defined way of referencing a part
                            of an object. TODO: this design is not final and this field
                            is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    status:
                      description: Status of attached RobotDevSuite.
                      properties:
                        active:
                          description: '[*alpha*] Indicates if RobotDevSuite is attached
                            to a Robot and actively provisioned it''s resources.'
                          type: boolean
                        notebookStatus:
                          description: Status of Notebook.
                          properties:
                            connections:
                              additionalProperties:
                                type: string
                              description: Address of the robot service that can be
                                reached from outside.
                              type: object
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object
                                        instead of an entire object, this string should
                                        contain a valid JSON/Go field access statement,
                                        such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a
                                        container within a pod, this would take on a
                                        value like: "spec.containers{name}" (where "name"
                                        refers to the name of the container that triggered
                                        the event) or if no container name is specified
                                        "spec.containers[2]" (container with index 2
                                        in this pod). This syntax is chosen only to
                                        have some well-defined way of referencing a
                                        part of an object. TODO: this design is not
                                        final and this field is subject to change in
                                        the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which
                                        this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - created
                              type: object
                          type: object
                        phase:
                          description: Phase of RobotDevSuite.
                          type: string
                        remoteIDERelayServerStatus:
                          description: Status of remote Cloud IDE RelayServer. Created
                            only if the instance type is Physical Instance.
                          properties:
                            connections:
                              additionalProperties:
                                type: string
                              description: Address of the robot service that can be
                                reached from outside.
                              type: object
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object
                                        instead of an entire object, this string should
                                        contain a valid JSON/Go field access statement,
                                        such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a
                                        container within a pod, this would take on a
                                        value like: "spec.containers{name}" (where "name"
                                        refers to the name of the container that triggered
                                        the event) or if no container name is specified
                                        "spec.containers[2]" (container with index 2
                                        in this pod). This syntax is chosen only to
                                        have some well-defined way of referencing a
                                        part of an object. TODO: this design is not
                                        final and this field is subject to change in
                                        the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which
                                        this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - created
                              type: object
                          type: object
                        robotIDEStatus:
                          description: Status of RobotIDE.
                          properties:
                            connections:
                              additionalProperties:
                                type: string
                              description: Address of the robot service that can be
                                reached from outside.
                              type: object
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object
                                        instead of an entire object, this string should
                                        contain a valid JSON/Go field access statement,
                                        such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a
                                        container within a pod, this would take on a
                                        value like: "spec.containers{name}" (where "name"
                                        refers to the name of the container that triggered
                                        the event) or if no container name is specified
                                        "spec.containers[2]" (container with index 2
                                        in this pod). This syntax is chosen only to
                                        have some well-defined way of referencing a
                                        part of an object. TODO: this design is not
                                        final and this field is subject to change in
                                        the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which
                                        this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - created
                              type: object
                          type: object
                        robotVDIStatus:
                          description: Status of RobotVDI.
                          properties:
                            connections:
                              additionalProperties:
                                type: string
                              description: Address of the robot service that can be
                                reached from outside.
                              type: object
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object
                                        instead of an entire object, this string should
                                        contain a valid JSON/Go field access statement,
                                        such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a
                                        container within a pod, this would take on a
                                        value like: "spec.containers{name}" (where "name"
                                        refers to the name of the container that triggered
                                        the event) or if no container name is specified
                                        "spec.containers[2]" (container with index 2
                                        in this pod). This syntax is chosen only to
                                        have some well-defined way of referencing a
                                        part of an object. TODO: this design is not
                                        final and this field is subject to change in
                                        the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which
                                        this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - created
                              type: object
                          type: object
                      type: object
                  type: object
                type: array
              attachedLaunchObjects:
                description: Attached launch object information. A LaunchManager can
                  be attached with a label on it with key `robolaunch.io/target-robot`
                  and value of the target robot's name. Multiple LaunchManager could
                  work together if they targeted the same Robot.
                items:
                  properties:
                    reference:
                      description: Reference to the LaunchManager instance.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within
                            a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]"
                            (container with index 2 in this pod). This syntax is chosen
                            only to have some well-defined way of referencing a part
                            of an object. TODO: this design is not final and this field
                            is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    status:
                      description: Status of attached LaunchManager.
                      properties:
                        active:
                          description: Indicates if the LaunchManager is attached to
                            a Robot and actively running.
                          type: boolean
                        launchPodStatus:
                          description: Collective statuses of launch pod and launch
                            objects.
                          properties:
                            launchStatus:
                              additionalProperties:
                                properties:
                                  active:
                                    description: Inditaces if the launch process are
                                      actively running on cluster. It may not be selected
                                      by launch cluster selectors.
                                    type: boolean
                                  containerStatus:
                                    description: Statuses of the containers of pods
                                      owned by LaunchManager.
                                    properties:
                                      containerID:
                                        description: Container's ID in the format '<type>://<container_id>'.
                                        type: string
                                      image:
                                        description: 'The image the container is running.
                                          More info: https://kubernetes.io/docs/concepts/containers/images.'
                                        type: string
                                      imageID:
                                        description: ImageID of the container's image.
                                        type: string
                                      lastState:
                                        description: Details about the container's last
                                          termination condition.
                                        properties:
                                          running:
                                            description: Details about a running container
                                            properties:
                                              startedAt:
                                                description: Time at which the container
                                                  was last (re-)started
                                                format: date-time
                                                type: string
                                            type: object
                                          terminated:
                                            description: Details about a terminated
                                              container
                                            properties:
                                              containerID:
                                                description: Container's ID in the format
                                                  '<type>://<container_id>'
                                                type: string
                                              exitCode:
                                                description: Exit status from the last
                                                  termination of the container
                                                format: int32
                                                type: integer
                                              finishedAt:
                                                description: Time at which the container
                                                  last terminated
                                                format: date-time
                                                type: string
                                              message:
                                                description: Message regarding the last
                                                  termination of the container
                                                type: string
                                              reason:
                                                description: (brief) reason from the
                                                  last termination of the container
                                                type: string
                                              signal:
                                                description: Signal from the last termination
                                                  of the container
                                                format: int32
                                                type: integer
                                              startedAt:
                                                description: Time at which previous
                                                  execution of the container started
                                                format: date-time
                                                type: string
                                            required:
                                            - exitCode
                                            type: object
                                          waiting:
                                            description: Details about a waiting container
                                            properties:
                                              message:
                                                description: Message regarding why the
                                                  container is not yet running.
                                                type: string
                                              reason:
                                                description: (brief) reason the container
                                                  is not yet running.
                                                type: string
                                            type: object
                                        type: object
                                      name:
                                        description: This must be a DNS_LABEL. Each
                                          container in a pod must have a unique name.
                                          Cannot be updated.
                                        type: string
                                      ready:
                                        description: Specifies whether the container
                                          has passed its readiness probe.
                                        type: boolean
                                      restartCount:
                                        description: The number of times the container
                                          has been restarted.
                                        format: int32
                                        type: integer
                                      started:
                                        description: Specifies whether the container
                                          has passed its startup probe. Initialized
                                          as false, becomes true after startupProbe
                                          is considered successful. Resets to false
                                          when the container is restarted, or if kubelet
                                          loses state temporarily. Is always true when
                                          no startupProbe is defined.
                                        type: boolean
                                      state:
                                        description: Details about the container's current
                                          condition.
                                        properties:
                                          running:
                                            description: Details about a running container
                                            properties:
                                              startedAt:
                                                description: Time at which the container
                                                  was last (re-)started
                                                format: date-time
                                                type: string
                                            type: object
                                          terminated:
                                            description: Details about a terminated
                                              container
                                            properties:
                                              containerID:
                                                description: Container's ID in the format
                                                  '<type>://<container_id>'
                                                type: string
                                              exitCode:
                                                description: Exit status from the last
                                                  termination of the container
                                                format: int32
                                                type: integer
                                              finishedAt:
                                                description: Time at which the container
                                                  last terminated
                                                format: date-time
                                                type: string
                                              message:
                                                description: Message regarding the last
                                                  termination of the container
                                                type: string
                                              reason:
                                                description: (brief) reason from the
                                                  last termination of the container
                                                type: string
                                              signal:
                                                description: Signal from the last termination
                                                  of the container
                                                format: int32
                                                type: integer
                                              startedAt:
                                                description: Time at which previous
                                                  execution of the container started
                                                format: date-time
                                                type: string
                                            required:
                                            - exitCode
                                            type: object
                                          waiting:
                                            description: Details about a waiting container
                                            properties:
                                              message:
                                                description: Message regarding why the
                                                  container is not yet running.
                                                type: string
                                              reason:
                                                description: (brief) reason the container
                                                  is not yet running.
                                                type: string
                                            type: object
                                        type: object
                                    required:
                                    - image
                                    - imageID
                                    - name
                                    - ready
                                    - restartCount
                                    type: object
                                type: object
                              description: Status of launch objects. Every launch object
                                generates a `ros2 launch` command that will run as an
                                entrypoint in a container.
                              type: object
                            status:
                              description: Launch pod status. Every LaunchManager creates
                                one pod if active.
                              properties:
                                ip:
                                  description: IP of the pod.
                                  type: string
                                resource:
                                  description: Generic status for any owned resource.
                                  properties:
                                    created:
                                      description: Shows if the owned resource is created.
                                      type: boolean
                                    phase:
                                      description: Phase of the owned resource.
                                      type: string
                                    reference:
                                      description: Reference to the owned resource.
                                      properties:
                                        apiVersion:
                                          description: API version of the referent.
                                          type: string
                                        fieldPath:
                                          description: 'If referring to a piece of an
                                            object instead of an entire object, this
                                            string should contain a valid JSON/Go field
                                            access statement, such as desiredState.manifest.containers[2].
                                            For example, if the object reference is
                                            to a container within a pod, this would
                                            take on a value like: "spec.containers{name}"
                                            (where "name" refers to the name of the
                                            container that triggered the event) or if
                                            no container name is specified "spec.containers[2]"
                                            (container with index 2 in this pod). This
                                            syntax is chosen only to have some well-defined
                                            way of referencing a part of an object.
                                            TODO: this design is not final and this
                                            field is subject to change in the future.'
                                          type: string
                                        kind:
                                          description: 'Kind of the referent. More info:
                                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                          type: string
                                        namespace:
                                          description: 'Namespace of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                          type: string
                                        resourceVersion:
                                          description: 'Specific resourceVersion to
                                            which this reference is made, if any. More
                                            info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                          type: string
                                        uid:
                                          description: 'UID of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - created
                                  type: object
                              type: object
                          type: object
                        phase:
                          description: Phase of LaunchManager.
                          type: string
                      type: object
                  type: object
                type: array
              discoveryServerStatus:
                description: Discovery server instance status.
                properties:
                  resource:
                    description: Generic status for any owned resource.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  status:
                    description: Status of the DiscoveryServer instance.
                    properties:
                      configMapStatus:
                        description: Status of the DiscoveryServer config map.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                      connectionInfo:
                        description: Connection information.
                        properties:
                          configMapName:
                            description: Name of the config map that holds discovery
                              server configuration.
                            type: string
                          ip:
                            description: IP of the discovery server. IP is being obtained
                              from the DNS name, which is being built according to the
                              discovery server configuration.
                            type: string
                          uri:
                            description: URI of the discovery server. Discovery server
                              instance tries to ping this address to see if it's reachable.
                            type: string
                        type: object
                      phase:
                        description: Phase of the DiscoveryServer.
                        type: string
                      podStatus:
                        description: Status of the DiscoveryServer pod.
                        properties:
                          ip:
                            description: IP of the pod.
                            type: string
                          resource:
                            description: Generic status for any owned resource.
                            properties:
                              created:
                                description: Shows if the owned resource is created.
                                type: boolean
                              phase:
                                description: Phase of the owned resource.
                                type: string
                              reference:
                                description: Reference to the owned resource.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2]. For
                                      example, if the object reference is to a container
                                      within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to
                                      the name of the container that triggered the event)
                                      or if no container name is specified "spec.containers[2]"
                                      (container with index 2 in this pod). This syntax
                                      is chosen only to have some well-defined way of
                                      referencing a part of an object. TODO: this design
                                      is not final and this field is subject to change
                                      in the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - created
                            type: object
                        type: object
                      serviceExportStatus:
                        description: Status of the DiscoveryServer ServiceExport.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                      serviceStatus:
                        description: Status of the DiscoveryServer service.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                    type: object
                type: object
              hostDirs:
                description: '[*alpha*] List of directories mounted from host.'
                items:
                  properties:
                    hostPath:
                      type: string
                    internalPath:
                      type: string
                    name:
                      type: string
                  type: object
                type: array
              image:
                description: Main image of Robot. It is derived either from the specifications
                  or determined directly over labels.
                type: string
              loaderJobStatus:
                description: Status of loader job that configures environment.
                properties:
                  created:
                    description: Shows if the owned resource is created.
                    type: boolean
                  phase:
                    description: Phase of the owned resource.
                    type: string
                  reference:
                    description: Reference to the owned resource.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead of
                          an entire object, this string should contain a valid JSON/Go
                          field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part of
                          an object. TODO: this design is not final and this field is
                          subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - created
                type: object
              nodeName:
                description: Node that Robot uses. It is selected via tenancy labels.
                type: string
              persistentDirs:
                description: '[*alpha*] Status of PVCs of persistent directories.'
                items:
                  properties:
                    path:
                      type: string
                    status:
                      description: Generic status for any owned resource.
                      properties:
                        created:
                          description: Shows if the owned resource is created.
                          type: boolean
                        phase:
                          description: Phase of the owned resource.
                          type: string
                        reference:
                          description: Reference to the owned resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a valid
                                JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container that
                                triggered the event) or if no container name is specified
                                "spec.containers[2]" (container with index 2 in this
                                pod). This syntax is chosen only to have some well-defined
                                way of referencing a part of an object. TODO: this design
                                is not final and this field is subject to change in
                                the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference
                                is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - created
                      type: object
                  type: object
                type: array
              phase:
                description: Phase of Robot. It sums the general status of Robot.
                type: string
              robotDevSuiteStatus:
                description: Robot development suite instance status.
                properties:
                  resource:
                    description: Generic status for any owned resource.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  status:
                    description: Status of the RobotDevSuite instance.
                    properties:
                      active:
                        description: '[*alpha*] Indicates if RobotDevSuite is attached
                          to a Robot and actively provisioned it''s resources.'
                        type: boolean
                      notebookStatus:
                        description: Status of Notebook.
                        properties:
                          connections:
                            additionalProperties:
                              type: string
                            description: Address of the robot service that can be reached
                              from outside.
                            type: object
                          resource:
                            description: Generic status for any owned resource.
                            properties:
                              created:
                                description: Shows if the owned resource is created.
                                type: boolean
                              phase:
                                description: Phase of the owned resource.
                                type: string
                              reference:
                                description: Reference to the owned resource.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2]. For
                                      example, if the object reference is to a container
                                      within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to
                                      the name of the container that triggered the event)
                                      or if no container name is specified "spec.containers[2]"
                                      (container with index 2 in this pod). This syntax
                                      is chosen only to have some well-defined way of
                                      referencing a part of an object. TODO: this design
                                      is not final and this field is subject to change
                                      in the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - created
                            type: object
                        type: object
                      phase:
                        description: Phase of RobotDevSuite.
                        type: string
                      remoteIDERelayServerStatus:
                        description: Status of remote Cloud IDE RelayServer. Created
                          only if the instance type is Physical Instance.
                        properties:
                          connections:
                            additionalProperties:
                              type: string
                            description: Address of the robot service that can be reached
                              from outside.
                            type: object
                          resource:
                            description: Generic status for any owned resource.
                            properties:
                              created:
                                description: Shows if the owned resource is created.
                                type: boolean
                              phase:
                                description: Phase of the owned resource.
                                type: string
                              reference:
                                description: Reference to the owned resource.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2]. For
                                      example, if the object reference is to a container
                                      within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to
                                      the name of the container that triggered the event)
                                      or if no container name is specified "spec.containers[2]"
                                      (container with index 2 in this pod). This syntax
                                      is chosen only to have some well-defined way of
                                      referencing a part of an object. TODO: this design
                                      is not final and this field is subject to change
                                      in the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - created
                            type: object
                        type: object
                      robotIDEStatus:
                        description: Status of RobotIDE.
                        properties:
                          connections:
                            additionalProperties:
                              type: string
                            description: Address of the robot service that can be reached
                              from outside.
                            type: object
                          resource:
                            description: Generic status for any owned resource.
                            properties:
                              created:
                                description: Shows if the owned resource is created.
                                type: boolean
                              phase:
                                description: Phase of the owned resource.
                                type: string
                              reference:
                                description: Reference to the owned resource.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2]. For
                                      example, if the object reference is to a container
                                      within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to
                                      the name of the container that triggered the event)
                                      or if no container name is specified "spec.containers[2]"
                                      (container with index 2 in this pod). This syntax
                                      is chosen only to have some well-defined way of
                                      referencing a part of an object. TODO: this design
                                      is not final and this field is subject to change
                                      in the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - created
                            type: object
                        type: object
                      robotVDIStatus:
                        description: Status of RobotVDI.
                        properties:
                          connections:
                            additionalProperties:
                              type: string
                            description: Address of the robot service that can be reached
                              from outside.
                            type: object
                          resource:
                            description: Generic status for any owned resource.
                            properties:
                              created:
                                description: Shows if the owned resource is created.
                                type: boolean
                              phase:
                                description: Phase of the owned resource.
                                type: string
                              reference:
                                description: Reference to the owned resource.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2]. For
                                      example, if the object reference is to a container
                                      within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to
                                      the name of the container that triggered the event)
                                      or if no container name is specified "spec.containers[2]"
                                      (container with index 2 in this pod). This syntax
                                      is chosen only to have some well-defined way of
                                      referencing a part of an object. TODO: this design
                                      is not final and this field is subject to change
                                      in the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - created
                            type: object
                        type: object
                    type: object
                type: object
              rosBridgeStatus:
                description: ROS bridge instance status.
                properties:
                  connection:
                    description: Address of the robot service that can be reached from
                      outside.
                    type: string
                  resource:
                    description: Generic status for any owned resource.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  status:
                    description: Status of the ROSBridge instance.
                    properties:
                      ingressStatus:
                        description: Status of ROSBridge Ingress.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                      phase:
                        description: Phase of ROSBridge.
                        type: string
                      podStatus:
                        description: Status of ROSBridge pod.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                      serviceStatus:
                        description: Status of ROSBridge service.
                        properties:
                          resource:
                            description: Generic status for any owned resource.
                            properties:
                              created:
                                description: Shows if the owned resource is created.
                                type: boolean
                              phase:
                                description: Phase of the owned resource.
                                type: string
                              reference:
                                description: Reference to the owned resource.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2]. For
                                      example, if the object reference is to a container
                                      within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to
                                      the name of the container that triggered the event)
                                      or if no container name is specified "spec.containers[2]"
                                      (container with index 2 in this pod). This syntax
                                      is chosen only to have some well-defined way of
                                      referencing a part of an object. TODO: this design
                                      is not final and this field is subject to change
                                      in the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - created
                            type: object
                          urls:
                            additionalProperties:
                              type: string
                            description: Connection URL.
                            type: object
                        type: object
                    type: object
                type: object
              uid:
                description: User ID of robolaunch user in image.
                format: int64
                type: integer
              workspaceManagerStatus:
                description: Workspace manager instance status if exists.
                properties:
                  resource:
                    description: Generic status for any owned resource.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  status:
                    description: Status of the WorkspaceManager instance.
                    properties:
                      cleanupJobStatus:
                        description: Status of cleanup jobs that runs while reconfiguring
                          workspaces.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                      clonerJobStatus:
                        description: Status of cloner job.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                      phase:
                        description: Phase of WorkspaceManager.
                        type: string
                      version:
                        description: Incremental version of workspace configuration
                          map. Used to determine changes in configuration.
                        type: integer
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []