apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: robotartifacts.robot.roboscale.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  labels:
  {{- include "robot-operator.labels" . | nindent 4 }}
spec:
  group: robot.roboscale.io
  names:
    kind: RobotArtifact
    listKind: RobotArtifactList
    plural: robotartifacts
    singular: robotartifact
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RobotArtifact is a non-functional resource that holds Robot's specifications.
          It is used to define Robot templates.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          template:
            description: Holds Robot's `.spec`.
            properties:
              environment:
                description: Holds environment's configuration. Applied if `.spec.type`
                  is `Environment` and must be `nil` otherwise.
                properties:
                  application:
                    description: Application properties.
                    properties:
                      name:
                        description: Application name.
                        type: string
                      version:
                        description: Version of the application.
                        type: string
                    required:
                    - name
                    - version
                    type: object
                  devspace:
                    description: DevSpace image properties.
                    properties:
                      desktop:
                        description: Ubuntu desktop.
                        type: string
                      ubuntuDistro:
                        description: Ubuntu distribution of the environment.
                        type: string
                      version:
                        description: DevSpace image version.
                        type: string
                    required:
                    - desktop
                    - ubuntuDistro
                    - version
                    type: object
                  domain:
                    description: Domain of the environment.
                    type: string
                required:
                - application
                - devspace
                - domain
                type: object
              robot:
                description: Holds robot's configuration. Applied if `.spec.type` is
                  `Robot` and must be `nil` otherwise.
                properties:
                  discoveryServerTemplate:
                    description: Discovery server configurational parameters.
                    properties:
                      cluster:
                        description: Cloud instance name that holds DiscoveryServer
                          instance with `Server` type. Should be empty if the type is
                          `Server` since it takes cloud instance's name automatically.
                          Should be set if the type is `Client`.
                        type: string
                      domainID:
                        description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                        maximum: 101
                        minimum: 0
                        type: integer
                      hostname:
                        description: If instance type is `Server`, it can be an arbitrary
                          value. If instance type is `Client`, it should be the same
                          with Server's hostname. Used for getting Server's IP over
                          DNS.
                        type: string
                      reference:
                        description: Reference to the `Server` instance. It is used
                          if `.spec.type` is `Client`. Referenced object can be previously
                          provisioned in another cluster. In that case, cluster's name
                          can be specified in `.spec.cluster` field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      subdomain:
                        description: If instance type is `Server`, it can be an arbitrary
                          value. If instance type is `Client`, it should be the same
                          with Server's subdomain. Used for getting Server's IP over
                          DNS.
                        type: string
                      type:
                        description: Instance type can be either `Server` or `Client`.
                          If `Server`, instance creates discovery server resources and
                          workloads. Other `Client` instances can connect to the `Server`
                          instance. If `Client`, instance tries to connect a `Server`
                          instance and hold `Server` configuration in a ConfigMap.
                        type: string
                    required:
                    - domainID
                    type: object
                  distributions:
                    description: ROS 2 distributions to be used. You can select multiple
                      distributions if they are supported in the same underlying OS.
                      (eg. `foxy` and `galactic` are supported in Ubuntu Focal, so they
                      can be used together but both cannot be used with `humble`)
                    items:
                      description: ROS 2 distribution selection. Currently supported
                        distributions are Humble, Foxy, Galactic.
                      enum:
                      - foxy
                      - galactic
                      - humble
                      type: string
                    maxItems: 2
                    minItems: 1
                    type: array
                  domainID:
                    description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                    maximum: 101
                    minimum: 0
                    type: integer
                  rmwImplementation:
                    description: RMW implementation selection. Robot operator currently
                      supports only FastRTPS. See https://docs.ros.org/en/foxy/How-To-Guides/Working-with-multiple-RMW-implementations.html.
                    enum:
                    - rmw_fastrtps_cpp
                    type: string
                  rosBridgeTemplate:
                    description: ROS bridge configurational parameters.
                    properties:
                      ingress:
                        description: '[*alpha*] ROSBridge will create an Ingress resource
                          if `true`.'
                        type: boolean
                      ros:
                        description: Configurational parameters for ROS bridge.
                        properties:
                          distro:
                            description: ROS distribution for bridge.
                            enum:
                            - foxy
                            - galactic
                            - humble
                            type: string
                          enabled:
                            description: If `true`, resources and workloads are created
                              by ROSBridge.
                            type: boolean
                        type: object
                      ros2:
                        description: Configurational parameters for ROS 2 bridge.
                        properties:
                          distro:
                            description: ROS distribution for bridge.
                            enum:
                            - foxy
                            - galactic
                            - humble
                            type: string
                          enabled:
                            description: If `true`, resources and workloads are created
                              by ROSBridge.
                            type: boolean
                        type: object
                      serviceType:
                        description: Service type of ROSBridge. `ClusterIP` and `NodePort`
                          is supported.
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                    type: object
                required:
                - domainID
                type: object
              robotDevSuiteTemplate:
                description: Robot development suite template
                properties:
                  ideEnabled:
                    description: If `true`, a Cloud IDE will be provisioned inside development
                      suite.
                    type: boolean
                  remoteIDEEnabled:
                    description: If `true`, a relay server for remote Cloud IDE will
                      be provisioned inside development suite.
                    type: boolean
                  remoteIDERelayServerTemplate:
                    description: Configurational parameters of remote IDE. Applied if
                      `.spec.remoteIDEEnabled` is set to `true`.
                    properties:
                      hostname:
                        description: Hostname of the remote pod.
                        type: string
                      instanceName:
                        description: Remote instance name.
                        type: string
                      remoteNamespace:
                        description: Remote namespace.
                        type: string
                      remotePort:
                        description: Remote port.
                        type: integer
                      rootDNSConfig:
                        description: '[*alpha*] Root DNS configuration.'
                        properties:
                          host:
                            description: '[*alpha*] Root DNS name..'
                            type: string
                        required:
                        - host
                        type: object
                      subdomain:
                        description: Subdomain of the remote pod. It's also same with
                          remote service's name.
                        type: string
                      tlsSecretRef:
                        description: '[*alpha*] TLS secret reference.'
                        properties:
                          name:
                            description: '[*alpha*] TLS secret object name.'
                            type: string
                          namespace:
                            description: '[*alpha*] TLS secret object namespace.'
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                    type: object
                  robotIDETemplate:
                    description: Configurational parameters of RobotIDE. Applied if
                      `.spec.ideEnabled` is set to `true`.
                    properties:
                      display:
                        description: Cloud IDE connects an X11 socket if it's set to
                          `true` and a target RobotVDI resource is set in labels with
                          key `robolaunch.io/target-vdi`. Applications that requires
                          GUI can be executed such as rViz.
                        type: boolean
                      ingress:
                        description: '[*alpha*] RobotIDE will create an Ingress resource
                          if `true`.'
                        type: boolean
                      privileged:
                        description: If `true`, containers of RobotIDE will be privileged
                          containers. It can be used in physical instances where it's
                          necessary to access I/O devices on the host machine. Not recommended
                          to activate this field on cloud instances.
                        type: boolean
                      resources:
                        description: Resource limitations of Cloud IDE.
                        properties:
                          cpu:
                            description: CPU resource limit.
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            description: GPU core number that will be allocated.
                            type: integer
                          gpuInstance:
                            description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb.
                              Defaults to "nvidia.com/gpu".
                            type: string
                          memory:
                            description: Memory resource limit.
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      serviceType:
                        default: NodePort
                        description: Service type of Cloud IDE. `ClusterIP` and `NodePort`
                          is supported.
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                    type: object
                  robotVDITemplate:
                    description: Configurational parameters of RobotVDI. Applied if
                      `.spec.vdiEnabled` is set to `true`.
                    properties:
                      disableNvenc:
                        description: If true, VDI uses plain h264 instead of nvh264enc.
                        type: boolean
                      ingress:
                        description: '[*alpha*] RobotIDE will create an Ingress resource
                          if `true`.'
                        type: boolean
                      nat1to1:
                        description: NAT1TO1 option for Cloud VDI.
                        type: string
                      privileged:
                        description: If `true`, containers of RobotIDE will be privileged
                          containers. It can be used in physical instances where it's
                          necessary to access I/O devices on the host machine. Not recommended
                          to activate this field on cloud instances.
                        type: boolean
                      resolution:
                        default: 2048x1152
                        description: VDI screen resolution options. Default is `2048x1152`.
                        enum:
                        - 2048x1152
                        - 1920x1080
                        - 1600x1200
                        type: string
                      resources:
                        description: Resource limitations of Cloud IDE.
                        properties:
                          cpu:
                            description: CPU resource limit.
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            description: GPU core number that will be allocated.
                            type: integer
                          gpuInstance:
                            description: GPU instance that will be allocated. eg. nvidia.com/mig-1g.5gb.
                              Defaults to "nvidia.com/gpu".
                            type: string
                          memory:
                            description: Memory resource limit.
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      serviceType:
                        default: NodePort
                        description: Service type of Cloud IDE. `ClusterIP` and `NodePort`
                          is supported.
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                      webrtcPortRange:
                        description: UDP port range to used in WebRTC connections.
                        pattern: ^([0-9])+-([0-9])+$
                        type: string
                    type: object
                  vdiEnabled:
                    description: If `true`, a Cloud VDI will be provisioned inside development
                      suite.
                    type: boolean
                type: object
              rootDNSConfig:
                description: '[*alpha*] Root DNS configuration.'
                properties:
                  host:
                    description: '[*alpha*] Root DNS name..'
                    type: string
                required:
                - host
                type: object
              storage:
                description: Total storage amount to persist via Robot. Unit of measurement
                  is MB. (eg. `10240` corresponds 10 GB) This amount is being shared
                  between different components.
                properties:
                  amount:
                    default: 10000
                    description: Specifies how much storage will be allocated in total.
                      Use MB as a unit of measurement. (eg. `10240` is equal to 10 GB)
                    type: integer
                  storageClassConfig:
                    description: Storage class selection for robot's volumes.
                    properties:
                      accessMode:
                        description: PVC access modes. Currently, only `ReadWriteOnce`
                          is supported.
                        type: string
                      name:
                        description: Storage class name.
                        type: string
                    type: object
                type: object
              tlsSecretRef:
                description: '[*alpha*] TLS secret reference.'
                properties:
                  name:
                    description: '[*alpha*] TLS secret object name.'
                    type: string
                  namespace:
                    description: '[*alpha*] TLS secret object namespace.'
                    type: string
                required:
                - name
                - namespace
                type: object
              type:
                description: Determines the object type. If "Environment", operator
                  will provision an environment according to the specifications. (`.spec.environment`)
                  If "Robot", operator will provision an environment specialized for
                  ROS 2 according to the specifications. (`.spec.robot`)
                type: string
              workspaceManagerTemplate:
                description: Workspace manager template to configure ROS 2 workspaces.
                properties:
                  updateNeeded:
                    description: WorkspaceManager is triggered if this field is set
                      to `true`. Then the workspaces are being configured again while
                      backing up the old configurations. This field is often used by
                      operator.
                    type: boolean
                  workspaces:
                    description: Workspace definitions of robot. Multiple ROS 2 workspaces
                      can be configured over this field.
                    items:
                      description: Workspace description. Each robot should contain
                        at least one workspace. A workspace should contain at least
                        one repository in it.
                      properties:
                        distro:
                          description: ROS 2 distribution selection. Currently supported
                            distributions are Humble, Foxy, Galactic.
                          enum:
                          - foxy
                          - galactic
                          - humble
                          type: string
                        name:
                          description: Name of workspace. If a workspace's name is `my_ws`,
                            it's absolute path is `/home/workspaces/my_ws`.
                          type: string
                        repositories:
                          additionalProperties:
                            description: Repository description.
                            properties:
                              branch:
                                description: Branch of the repository to clone.
                                type: string
                              hash:
                                description: '[*Autofilled*] Hash of last commit'
                                type: string
                              owner:
                                description: '[*Autofilled*] User or organization, maintainer
                                  of repository'
                                type: string
                              path:
                                description: '[*Autofilled*] Absolute path of repository'
                                type: string
                              repo:
                                description: '[*Autofilled*] Repository name'
                                type: string
                              url:
                                description: Base URL of the repository.
                                type: string
                            required:
                            - branch
                            - url
                            type: object
                          description: Repositories to clone inside workspace's `src`
                            directory.
                          type: object
                      required:
                      - distro
                      - name
                      - repositories
                      type: object
                    minItems: 1
                    type: array
                  workspacesPath:
                    description: Global path of workspaces. It's fixed to `/root/workspaces`
                      path.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []