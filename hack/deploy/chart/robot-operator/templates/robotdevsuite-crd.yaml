apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: robotdevsuites.robot.roboscale.io
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "robot-operator.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.9.2
  labels:
  {{- include "robot-operator.labels" . | nindent 4 }}
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "robot-operator.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: robot.roboscale.io
  names:
    kind: RobotDevSuite
    listKind: RobotDevSuiteList
    plural: robotdevsuites
    singular: robotdevsuite
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.vdiEnabled
      name: VDI
      type: string
    - jsonPath: .spec.ideEnabled
      name: IDE
      type: string
    - jsonPath: .spec.remoteIDEEnabled
      name: Remote IDE RS
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RobotDevSuite is a custom resource that creates dynamically configured
          development environments for robots.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the RobotDevSuite.
            properties:
              ideEnabled:
                description: If `true`, a Cloud IDE will be provisioned inside development
                  suite.
                type: boolean
              remoteIDEEnabled:
                description: If `true`, a relay server for remote Cloud IDE will be
                  provisioned inside development suite.
                type: boolean
              remoteIDERelayServerTemplate:
                description: Configurational parameters of remote IDE. Applied if `.spec.remoteIDEEnabled`
                  is set to `true`.
                properties:
                  hostname:
                    description: Hostname of the remote pod.
                    type: string
                  instanceName:
                    description: Remote instance name.
                    type: string
                  remoteNamespace:
                    description: Remote namespace.
                    type: string
                  remotePort:
                    description: Remote port.
                    type: integer
                  rootDNSConfig:
                    description: '[*alpha*] Root DNS configuration.'
                    properties:
                      host:
                        description: '[*alpha*] Root DNS name..'
                        type: string
                    required:
                    - host
                    type: object
                  subdomain:
                    description: Subdomain of the remote pod. It's also same with remote
                      service's name.
                    type: string
                  tlsSecretRef:
                    description: '[*alpha*] TLS secret reference.'
                    properties:
                      name:
                        description: '[*alpha*] TLS secret object name.'
                        type: string
                      namespace:
                        description: '[*alpha*] TLS secret object namespace.'
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                type: object
              robotIDETemplate:
                description: Configurational parameters of RobotIDE. Applied if `.spec.ideEnabled`
                  is set to `true`.
                properties:
                  display:
                    description: Cloud IDE connects an X11 socket if it's set to `true`
                      and a target RobotVDI resource is set in labels with key `robolaunch.io/target-vdi`.
                      Applications that requires GUI can be executed such as rViz.
                    type: boolean
                  ingress:
                    description: '[*alpha*] RobotIDE will create an Ingress resource
                      if `true`.'
                    type: boolean
                  privileged:
                    description: If `true`, containers of RobotIDE will be privileged
                      containers. It can be used in physical instances where it's necessary
                      to access I/O devices on the host machine. Not recommended to
                      activate this field on cloud instances.
                    type: boolean
                  resources:
                    description: Resource limitations of Cloud IDE.
                    properties:
                      cpu:
                        description: CPU resource limit.
                        pattern: ^([0-9])+(m)$
                        type: string
                      gpuCore:
                        description: GPU core number that will be allocated.
                        type: integer
                      memory:
                        description: Memory resource limit.
                        pattern: ^([0-9])+(Mi|Gi)$
                        type: string
                    type: object
                  serviceType:
                    default: NodePort
                    description: Service type of Cloud IDE. `ClusterIP` and `NodePort`
                      is supported.
                    enum:
                    - ClusterIP
                    - NodePort
                    type: string
                type: object
              robotVDITemplate:
                description: Configurational parameters of RobotVDI. Applied if `.spec.vdiEnabled`
                  is set to `true`.
                properties:
                  disableNvenc:
                    description: If true, VDI uses plain h264 instead of nvh264enc.
                    type: boolean
                  ingress:
                    description: '[*alpha*] RobotIDE will create an Ingress resource
                      if `true`.'
                    type: boolean
                  nat1to1:
                    description: NAT1TO1 option for Cloud VDI.
                    type: string
                  privileged:
                    description: If `true`, containers of RobotIDE will be privileged
                      containers. It can be used in physical instances where it's necessary
                      to access I/O devices on the host machine. Not recommended to
                      activate this field on cloud instances.
                    type: boolean
                  resolution:
                    default: 2048x1152
                    description: VDI screen resolution options. Default is `2048x1152`.
                    enum:
                    - 2048x1152
                    - 1920x1080
                    - 1600x1200
                    type: string
                  resources:
                    description: Resource limitations of Cloud IDE.
                    properties:
                      cpu:
                        description: CPU resource limit.
                        pattern: ^([0-9])+(m)$
                        type: string
                      gpuCore:
                        description: GPU core number that will be allocated.
                        type: integer
                      memory:
                        description: Memory resource limit.
                        pattern: ^([0-9])+(Mi|Gi)$
                        type: string
                    type: object
                  serviceType:
                    default: NodePort
                    description: Service type of Cloud IDE. `ClusterIP` and `NodePort`
                      is supported.
                    enum:
                    - ClusterIP
                    - NodePort
                    type: string
                  webrtcPortRange:
                    description: UDP port range to used in WebRTC connections.
                    pattern: ^([0-9])+-([0-9])+$
                    type: string
                type: object
              vdiEnabled:
                description: If `true`, a Cloud VDI will be provisioned inside development
                  suite.
                type: boolean
            type: object
          status:
            description: Most recently observed status of the RobotDevSuite.
            properties:
              active:
                description: '[*alpha*] Indicates if RobotDevSuite is attached to a
                  Robot and actively provisioned it''s resources.'
                type: boolean
              phase:
                description: Phase of RobotDevSuite.
                type: string
              remoteIDERelayServerStatus:
                description: Status of remote Cloud IDE RelayServer. Created only if
                  the instance type is Physical Instance.
                properties:
                  connection:
                    description: Address of the robot service that can be reached from
                      outside.
                    type: string
                  resource:
                    description: Generic status for any owned resource.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                type: object
              robotIDEStatus:
                description: Status of RobotIDE.
                properties:
                  connection:
                    description: Address of the robot service that can be reached from
                      outside.
                    type: string
                  resource:
                    description: Generic status for any owned resource.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                type: object
              robotVDIStatus:
                description: Status of RobotVDI.
                properties:
                  connection:
                    description: Address of the robot service that can be reached from
                      outside.
                    type: string
                  resource:
                    description: Generic status for any owned resource.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []